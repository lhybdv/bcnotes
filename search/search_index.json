{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5218\u6325\u5b87\u7684\u533a\u5757\u94fe\u5b66\u4e60\u7b14\u8bb0 \u00b6","title":"\u5218\u6325\u5b87\u7684\u533a\u5757\u94fe\u5b66\u4e60\u7b14\u8bb0"},{"location":"#_1","text":"","title":"\u5218\u6325\u5b87\u7684\u533a\u5757\u94fe\u5b66\u4e60\u7b14\u8bb0"},{"location":"bitcoin/QA/","text":"Q & A \u00b6 \b\u6316\u77ff\u8282\u70b9\u4e3a\u4ec0\u4e48\u9700\u8981\u662f\u5168\u8282\u70b9? \u77ff\u6c60\u67b6\u6784\u4e0b\uff0c\u6316\u77ff\u8282\u70b9\u53ef\u4ee5\u4e0d\u662f\u5168\u8282\u70b9; \b\u5355\u8282\u70b9\u6316\u77ff\u9700\u8981\u662f\u5168\u8282\u70b9\u3002 \b\u4ea4\u6613\u4e2d\b\u7684 \"\u4ea4\u6613\u8f93\u5165\" \u672a\u5fc5\u6765\u81ea\u5f88\u65b0\u7684\u5757\u3002\u94fe\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u5757\u4e2d\u7684\u4ea4\u6613\u53ef\u4ee5\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb\uff0c\u5b83\u4eec\u53ea\u662f\u4ece\u4fdd\u5b58\u7684\u89d2\u5ea6\u4e0a \"\u7269\u7406\u76f8\u90bb\"\uff0c\b\u53ea\u8868\u8fbe\u540e\u7ee7\u5757\u5bf9\u524d\u9a71\u5757 \"\u5408\u6cd5\u6027\" \u7684\u8ba4\u53ef\u3002\u6240\u4ee5\uff0c\u8282\u70b9\u5728\u6536\u5230 \"\u65b0\u4ea4\u6613\" \u7684\b\u65f6\u5019\uff0c\u8fd9\u4e2a\u4ea4\u6613\u7684 \"\u4ea4\u6613\u8f93\u5165\" \b\u6709\u53ef\u80fd\u6765\u81ea\u4e8e\u94fe\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u672c\u5730\u82e5\u53ea\u4fdd\u5b58 \"\b\u4e00\u90e8\u5206\u533a\u5757\"\uff0c\u662f\u65e0\u6cd5\u8986\u76d6\u7684\u3002 \"\u4ea4\u6613\u8f93\u5165\" \u4e2d\u5305\u542b previous_output_hash \u4ece\u800c\u80fd\u591f\u627e\u5230\u524d\u7f6e\u4ea4\u6613\uff0c\u4f46\u5e76\u4e0d\u5305\u542b\u4ea4\u6613\u5185\u5bb9 (\u51cf\u5c0f\u4f20\u8f93\u91cf) \u4f46\u5982\u679c\u672c\u5730\u6ca1\u6709\u8be5\u4ea4\u6613\u6240\u5728\u533a\u5757\uff0c\u52bf\u5fc5\u8981\u4ece\u5176\u4ed6\u8282\u70b9\u4e0b\u8f7d\uff0c\u8fd9\u6837\u7684\u6027\u80fd\u4f1a\u964d\u4f4e \"\u6316\u77ff\u8282\u70b9\" \u6316\u77ff\u6210\u529f\u7387\u3002 \u77ff\u6c60\u67b6\u6784\u4e0b\u7684 \"\u6316\u77ff\u8282\u70b9\" \u53ef\u4ee5\u4ece \"\u4e2d\u7ee7\u8282\u70b9\" \u83b7\u53d6\u4ea4\u6613\u4fe1\u606f\uff0c\u4ece\u800c\u4e0d\u5fc5\u662f\u5168\u8282\u70b9 \"SPV \u9a8c\u8bc1\"\uff0c\u53ea\u5173\u5fc3\u8ddf\u81ea\u5df1\u5730\u5740\u76f8\u5173\u7684\u4ea4\u6613\uff0c\u91cf\u5c0f\uff0c\u5e76\u4e14\u4e0d\u5b58\u5728 \"\u901f\u5ea6\" \u4e0a\u7684\u7ade\u4e89\uff0c\"\u6316\u77ff\" \u9762\u5bf9\u6574\u4e2a\u7f51\u7edc\uff0c\u4e14\u8d8a\u5feb\u8d8a\u597d\u3002","title":"QA"},{"location":"bitcoin/QA/#q-a","text":"\b\u6316\u77ff\u8282\u70b9\u4e3a\u4ec0\u4e48\u9700\u8981\u662f\u5168\u8282\u70b9? \u77ff\u6c60\u67b6\u6784\u4e0b\uff0c\u6316\u77ff\u8282\u70b9\u53ef\u4ee5\u4e0d\u662f\u5168\u8282\u70b9; \b\u5355\u8282\u70b9\u6316\u77ff\u9700\u8981\u662f\u5168\u8282\u70b9\u3002 \b\u4ea4\u6613\u4e2d\b\u7684 \"\u4ea4\u6613\u8f93\u5165\" \u672a\u5fc5\u6765\u81ea\u5f88\u65b0\u7684\u5757\u3002\u94fe\u4e2d\u76f8\u90bb\u7684\u4e24\u4e2a\u5757\u4e2d\u7684\u4ea4\u6613\u53ef\u4ee5\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb\uff0c\u5b83\u4eec\u53ea\u662f\u4ece\u4fdd\u5b58\u7684\u89d2\u5ea6\u4e0a \"\u7269\u7406\u76f8\u90bb\"\uff0c\b\u53ea\u8868\u8fbe\u540e\u7ee7\u5757\u5bf9\u524d\u9a71\u5757 \"\u5408\u6cd5\u6027\" \u7684\u8ba4\u53ef\u3002\u6240\u4ee5\uff0c\u8282\u70b9\u5728\u6536\u5230 \"\u65b0\u4ea4\u6613\" \u7684\b\u65f6\u5019\uff0c\u8fd9\u4e2a\u4ea4\u6613\u7684 \"\u4ea4\u6613\u8f93\u5165\" \b\u6709\u53ef\u80fd\u6765\u81ea\u4e8e\u94fe\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u672c\u5730\u82e5\u53ea\u4fdd\u5b58 \"\b\u4e00\u90e8\u5206\u533a\u5757\"\uff0c\u662f\u65e0\u6cd5\u8986\u76d6\u7684\u3002 \"\u4ea4\u6613\u8f93\u5165\" \u4e2d\u5305\u542b previous_output_hash \u4ece\u800c\u80fd\u591f\u627e\u5230\u524d\u7f6e\u4ea4\u6613\uff0c\u4f46\u5e76\u4e0d\u5305\u542b\u4ea4\u6613\u5185\u5bb9 (\u51cf\u5c0f\u4f20\u8f93\u91cf) \u4f46\u5982\u679c\u672c\u5730\u6ca1\u6709\u8be5\u4ea4\u6613\u6240\u5728\u533a\u5757\uff0c\u52bf\u5fc5\u8981\u4ece\u5176\u4ed6\u8282\u70b9\u4e0b\u8f7d\uff0c\u8fd9\u6837\u7684\u6027\u80fd\u4f1a\u964d\u4f4e \"\u6316\u77ff\u8282\u70b9\" \u6316\u77ff\u6210\u529f\u7387\u3002 \u77ff\u6c60\u67b6\u6784\u4e0b\u7684 \"\u6316\u77ff\u8282\u70b9\" \u53ef\u4ee5\u4ece \"\u4e2d\u7ee7\u8282\u70b9\" \u83b7\u53d6\u4ea4\u6613\u4fe1\u606f\uff0c\u4ece\u800c\u4e0d\u5fc5\u662f\u5168\u8282\u70b9 \"SPV \u9a8c\u8bc1\"\uff0c\u53ea\u5173\u5fc3\u8ddf\u81ea\u5df1\u5730\u5740\u76f8\u5173\u7684\u4ea4\u6613\uff0c\u91cf\u5c0f\uff0c\u5e76\u4e14\u4e0d\u5b58\u5728 \"\u901f\u5ea6\" \u4e0a\u7684\u7ade\u4e89\uff0c\"\u6316\u77ff\" \u9762\u5bf9\u6574\u4e2a\u7f51\u7edc\uff0c\u4e14\u8d8a\u5feb\u8d8a\u597d\u3002","title":"Q &amp; A"},{"location":"bitcoin/protocal/","text":"\u6bd4\u7279\u5e01\u901a\u4fe1\u534f\u8bae \u00b6 1 \u5171\u7528\u7ed3\u6784 \u00b6 1.1 Message(\u6d88\u606f) \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 magic uint32_t \u7528\u4e8e\u8bc6\u522b\u6d88\u606f\u7684\u6765\u6e90\u7f51\u7edc\uff0c\u5f53\u6d41\u72b6\u6001\u4f4d\u7f6e\u65f6\uff0c\u5b83\u8fd8\u7528\u4e8e\u5bfb\u627e\u4e0b\u4e00\u6761\u6d88\u606f 12 command char[12] \u8bc6\u522b\u5305\u5185\u5bb9\u7684ASCII\u5b57\u4e32\uff0c\u7528NULL\u5b57\u7b26\u8865\u6ee1\uff0c(\u4f7f\u7528\u975eNULL\u5b57\u7b26\u586b\u5145\u4f1a\u88ab\u62d2\u7edd) 4 length uint32_t payload\u7684\u5b57\u8282\u6570 4 checksum uint32_t sha256(sha256(payload)) \u7684\u524d4\u4e2a\u5b57\u8282(\u4e0d\u5305\u542b\u5728version \u6216 verack \u4e2d) ? payload uchar[] \u5b9e\u9645\u6570\u636e command char \u8303\u56f4 [-128, 127], \u7b2c 1 \u4f4d\u8868\u793a\u7b26\u53f7\uff0c0 \u4e3a\u6b63\uff0c1 \u4e3a\u8d1f uchar[] \u8303\u56f4 [0, 255] command \u5c31\u662f\u6d88\u606f\u7684\u7c7b\u578b\uff0c\u76ee\u524d\u6d89\u53ca\u7684\u7c7b\u578b\u6709\uff1a version verack addr inv getdata getblocks getheaders tx block headers getaddr ping alert merkleblock mempool pong notfound filterload filteradd filterclear reject sendheaders feefilter sendcmpct cmpctblock getblocktxn blocktxn Note \u5bf9 payload (\u6d88\u606f\u4f53) \u7684 2 \u6b21 sha256 \u54c8\u5e0c\u4e4b\u540e\u7684\u524d 4 \u4e2a\u5b57\u8282\uff0c\u8ddf git \u7528\u6cd5\u7c7b\u4f3c\uff0c\u524d\u51e0\u4f4d\u8db3\u4ee5\u8d77\u5230\u533a\u522b\u7684\u4f5c\u7528 \u5e94\u8be5 \u4e0d\u662f \u7528\u4e8e\u9632\u6076\u610f\u7be1\u6539\u7684\uff0c\u56e0\u4e3a\u53d1\u51fa\u65b9\u81ea\u5df1\u53ef\u4ee5\u91cd\u65b0\u8ba1\u7b97\uff0c\u540c\u65f6\u6539 payload \u548c checksum \u5e94\u8be5 \u662f \u9632\u6b62\u7f51\u7edc\u4f20\u8f93\u3001\u8bfb\u53d6\u9519\u8bef\u4e4b\u7c7b\u7684\u5bfc\u81f4\u6570\u636e\u4e0d\u5b8c\u6574 version, verack \u8fd9 2 \u4e2a\u6d88\u606f\u6ca1\u6709 checksum\uff0c\u56e0\u4e3a\u6ca1\u6709 payload \u5df2\u5b9a\u4e49\u7684magic\u503c\uff1a Network Magic value Sent over wire as main 0xD9B4BEF9 F9 BE B4 D9 testnet 0xDAB5BFFA FA BF B5 DA testnet3 0x0709110B 0B 11 09 07 namecoin 0xFEB4BEF9 F9 BE B4 FE 1.2.1.2 Variable length integer (\u53d8\u957f\u6574\u6570) \u00b6 \u503c \u5b58\u50a8\u957f\u5ea6 \u683c\u5f0f < 0xfd 1 uint8_t <= 0xffff 3 0xfd + uint16_t <= 0xffffffff 5 0xfe + uint32_t - 9 0xff + uint64_t 1.2.1.3 Variable length string (\u53d8\u957f\u5b57\u7b26\u4e32) \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? length var_int \u5b57\u7b26\u4e32\u957f\u5ea6 ? string char[] \u5b57\u7b26\u4e32\u672c\u8eab(\u53ef\u4e3a\u7a7a) 1.2.1.4 Network address (\u7f51\u7edc\u5730\u5740) \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 8 services uint64_t \u4e0eversion \u6d88\u606f\u4e2d\u7684service(s)\u76f8\u540c 16 IPv6/4 char[16] Ipv6\u5730\u5740\uff0c\u4ee5\u7f51\u7edc\u5b57\u8282\u987a\u5e8f\u5b58\u50a8\u3002 2 port uint16_t \u7aef\u53e3\u53f7\uff0c\u4ee5\u7f51\u7edc\u5b57\u8282\u987a\u5e8f\u5b58\u50a8\u3002 Note \u5b98\u65b9\u5ba2\u6237\u7aef\u4ec5\u652f\u6301IPv4\uff0c\u4ec5\u8bfb\u53d6\u6700\u540e4\u4e2a\u5b57\u8282\u4ee5\u83b7\u53d6IPv4\u5730\u5740\u3002 IPv4\u5730\u5740\u4ee516\u5b57\u8282\u7684IPv4\u6620\u5c04\u4f4d\u5740\u683c\u5f0f\u5199\u5165\u7ed3\u6784\u3002(12\u5b57\u8282 00 00 00 00 00 00 00 00 00 00 FF FF, \u540e\u8ddf4 \u5b57\u8282IPv4\u5730\u5740) 1.2.1.5 Inventory Vectors (\u6e05\u5355\u5411\u91cf) \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 type uint32_t \u5bf9\u8c61\u7c7b\u578b\u6807\u8bc6 32 hash char[32] \u5bf9\u8c61\u6563\u5217\u503c \u76ee\u524d\u5bf9\u8c61\u7c7b\u578b\u6807\u8bc6\u5df2\u7ecf\u5b9a\u4e49\u5982\u4e0b3\u4e2a\u503c Value Name Description 0 ERROR Any data of with this number may be ignored 1 MSG_TX Hash is related to a transaction 2 MSG_BLOCK Hash is related to a data block 3 MSG_FILTERED_BLOCK Hash of a block header; identical to MSG_BLOCK. Only to be used in getdata message. Indicates the reply should be a merkleblock message rather than a block message; this only works if a bloom filter has been set. 4 MSG_CMPCT_BLOCK Hash of a block header; identical to MSG_BLOCK. Only to be used in getdata message. Indicates the reply should be a cmpctblock message. See BIP 152 for more info. 1.2.1.6 Block Headers (Block\u5934\u90e8) \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 version uint32_t Block\u7248\u672c\u4fe1\u606f\uff0c\u57fa\u4e8e\u521b\u5efa\u8be5block\u7684\u8f6f\u4ef6\u7248\u672c 32 prev_block char[32] \u8be5block\u524d\u4e00block\u7684\u6563\u5217 32 merkle_root char[32] \u4e0e\u8be5block\u76f8\u5173\u7684\u5168\u90e8\u4ea4\u6613\u4e4b\u6563\u5217(Merkle\u6811) 4 timestamp uint32_t \u8bb0\u5f55block\u521b\u5efa\u65f6\u95f4\u7684\u65f6\u95f4\u6233 4 bits uint32_t \u521b\u5efablock\u7684\u8ba1\u7b97\u96be\u5ea6 4 nonce uint32_t \u7528\u4e8e\u751f\u6210block\u7684\u4e34\u65f6\u6570\u636e 1 txn_count uint8_t \u4ea4\u6613\u6570\uff0c\u8fd9\u4e2a\u503c\u603b\u662f0 2 \u6d88\u606f\u7c7b\u578b \u00b6 2.1 version \u00b6 \u4e00\u4e2a\u8282\u70b9\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u5b83\u7acb\u5373\u5ba3\u544a\u5176\u7248\u672c\u3002\u5728\u901a\u4fe1\u53cc\u65b9\u90fd\u5f97\u5230\u5bf9\u65b9\u7248\u672c\u4e4b\u524d\uff0c\u4e0d\u4f1a\u6709\u5176\u4ed6\u901a\u4fe1 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 version uint32_t \u8282\u70b9\u4f7f\u7528\u7684\u534f\u8bae\u7248\u672c\u6807\u8bc6 8 services uint64_t \u8be5\u8fde\u63a5\u5141\u8bb8\u7684\u7279\u6027(bitfield) 8 timestamp uint64_t \u4ee5\u79d2\u8ba1\u7b97\u7684\u6807\u51c6UNIX\u65f6\u95f4\u6233 26 addr_me net_addr \u751f\u6210\u6b64\u6d88\u606f\u7684\u8282\u70b9\u7684\u7f51\u7edc\u5730\u5740 version >= 106 26 addr_you net_addr \u63a5\u6536\u6b64\u6d88\u606f\u7684\u8282\u70b9\u7684\u7f51\u7edc\u5730\u5740 8 nonce uint64_t \u8282\u70b9\u7684\u968f\u673aid\uff0c\u7528\u4e8e\u4fa6\u6d4b\u8fd9\u4e2a\u8fde\u63a5 ? sub_version_num var_str \u8f85\u52a9\u7248\u672c\u4fe1\u606f version >= 209 4 start_height uint32_t \u53d1\u9001\u8282\u70b9\u63a5\u6536\u5230\u7684\u6700\u65b0block 2.2 verack \u00b6 \u7248\u672c\u4e0d\u4f4e\u4e8e209\u7684\u5ba2\u6237\u7aef\u5728\u5e94\u7b54version\u6d88\u606f\u65f6\u53d1\u9001verack\u6d88\u606f 2.3 addr \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 1+ count var_int \u5730\u5740\u6570 30x? addr_list (uint32_t + net_addr)[] \u7f51\u7edc\u4e0a\u5176\u4ed6\u8282\u70b9\u7684\u5730\u5740\uff0c\u7248\u672c\u4f4e\u4e8e209\u65f6\u4ec5\u8bfb\u53d6\u7b2c\u4e00\u6761 2.4 inv \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? count var_int \u6e05\u5355(inventory)\u6570\u91cf 36x? inventory inv_vect[] \u6e05\u5355(inventory)\u6570\u636e 2.5 getdata \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? count var_int \u6e05\u5355(inventory)\u6570\u91cf 36x? inventory inv_vect[] \u6e05\u5355(inventory)\u6570\u636e 2.6 getblocks \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 1+ start count var_int hash_start \u7684\u6570\u91cf 32+ hash_start char[32] \u53d1\u9001\u8282\u70b9\u5df2\u77e5\u7684\u6700\u65b0block\u6563\u5217 32 hash_stop char[32] \u8bf7\u6c42\u7684\u6700\u540e\u4e00\u4e2ablock\u7684\u6563\u5217\uff0c\u82e5\u8981\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684block\u5219\u8bbe\u4e3a0 2.7 getheaders \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 1+ start count var_int hash_start \u7684\u6570\u91cf 32+ hash_start char[32] \u53d1\u9001\u8282\u70b9\u5df2\u77e5\u7684\u6700\u65b0block\u6563\u5217 32 hash_stop char[32] \u8bf7\u6c42\u7684\u6700\u540e\u4e00\u4e2ablock\u7684\u6563\u5217\uff0c\u82e5\u8981\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684block\u5219\u8bbe\u4e3a0 2.8 tx \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 version uint32_t \u4ea4\u6613\u6570\u636e\u683c\u5f0f\u7248\u672c 1+ tx_in count var_int \u4ea4\u6613\u7684\u8f93\u5165\u6570 41+ tx_in tx_in[] \u4ea4\u6613\u8f93\u5165\u6216\u6bd4\u7279\u5e01\u6765\u6e90\u5217\u8868 1+ tx_out count var_int \u4ea4\u6613\u7684\u8f93\u51fa\u6570 8+ tx_out tx_out[] \u4ea4\u6613\u8f93\u51fa\u6216\u6bd4\u7279\u5e01\u53bb\u5411\u5217\u8868 4 lock_time uint32_t \u9501\u5b9a\u4ea4\u6613\u7684\u671f\u9650\u6216block\u6570\u76ee\u3002\u5982\u679c\u4e3a0\u5219\u4ea4\u6613\u4e00\u76f4\u88ab\u9501\u5b9a\u3002\u672a\u9501\u5b9a\u7684\u4ea4\u6613\u4e0d\u53ef\u5305\u542b\u5728block\u4e2d\uff0c\u5e76\u53ef\u4ee5\u5728\u8fc7\u671f\u524d\u4fee\u6539(\u76ee\u524dbitcon\u4e0d\u5141\u8bb8\u66f4\u6539\u4ea4\u6613\uff0c\u6240\u4ee5\u6ca1\u6709\u7528) tx_in \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 36 previous_output outpoint \u5bf9\u524d\u4e00\u8f93\u51fa\u7684\u5f15\u7528 1+ script length var_int signature script \u7684\u957f\u5ea6 ? signature script uchar[] \u7528\u4e8e\u786e\u8ba4\u4ea4\u6613\u6388\u6743\u7684\u8ba1\u7b97\u811a\u672c 4 sequence uint32_t \u53d1\u9001\u8005\u5b9a\u4e49\u7684\u4ea4\u6613\u7248\u672c\uff0c\u7528\u4e8e\u5728\u4ea4\u6613\u88ab\u5199\u5165block\u4e4b\u524d\u66f4\u6539\u4ea4\u6613 outPoint \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 32 hash char[32] \u5f15\u7528\u7684\u4ea4\u6613\u7684\u6563\u5217 4 index uint32_t \u6307\u5b9a\u8f93\u51fa\u7684\u7d22\u5f15\uff0c\u7b2c\u4e00\u7b14\u8f93\u51fa\u7684\u7d22\u5f15\u662f0\uff0c\u4ee5\u6b64\u7c7b\u63a8 tx_out \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 8 value uint64_t \u4ea4\u6613\u7684\u6bd4\u7279\u5e01\u6570\u91cf(\u5355\u4f4d\u662f0.00000001) 1+ pk_script length var_int pk_script\u7684\u957f\u5ea6 ? pk_script uchar[] Usually contains the public key as a Bitcoin script setting up conditions to claim this output. 2.9 block \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 version uint32_t block\u7248\u672c\u4fe1\u606f\uff0c\u57fa\u4e8e\u751f\u6210block\u7684\u8f6f\u4ef6\u7248\u672c 32 prev_block char[32] \u8fd9\u4e00block\u5f15\u7528\u7684\u524d\u4e00block\u4e4b\u6563\u5217 32 merkle_root char[32] \u4e0e\u8fd9\u4e00block\u76f8\u5173\u7684\u5168\u90e8\u4ea4\u6613\u4e4b\u6563\u5217(Merkle\u6811) 4 timestamp uint32_t \u8bb0\u5f55block\u521b\u5efa\u65f6\u95f4\u7684\u65f6\u95f4\u6233 4 bits uint32_t \u8fd9\u4e00block\u7684\u8ba1\u7b97\u96be\u5ea6 4 nonce uint32_t \u7528\u4e8e\u751f\u6210\u8fd9\u4e00block\u7684nonce\u503c ? txn_count var_int \u4ea4\u6613\u6570\u91cf ? txns tx[] \u4ea4\u6613\uff0c\u4ee5tx\u683c\u5f0f\u5b58\u50a8 2.10 headers \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? count var_int block\u5934\u6570\u91cf 77x? headers block_header[] block\u5934 2.11 getaddr \u00b6 !!! question getaddr \u4f3c\u4e4e\u4e5f\u6ca1\u6709\u6d88\u606f\u4f53? 2.12 checkorder \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e Fields from CMerkleTx ? hashBlock ? vMerkleBranch ? nIndex Fields from CWalletTx ? vtxPrev ? mapValue ? vOrderForm ? fTimeReceivedIsTxTime ? nTimeReceived ? fFromMe ? fSpent 2.13 submitorder \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 32 hash char[32] \u4ea4\u6613\u6563\u5217 ? wallet_entry CWalletTx \u4e0echeckorder\u7684payload\u76f8\u540c 2.14 reply \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 reply uint32_t \u5e94\u7b54\u4ee3\u7801 \u53ef\u80fd\u503c: \u503c \u540d\u79f0 \u8bf4\u660e 0 SUCCESS IP Transaction\u53ef\u4ee5\u6267\u884c(\u56de\u5e94checkorder)\u6216\u5df2\u7ecf\u88ab\u63a5\u53d7(\u56de\u5e94submitorder) 1 WALLET_ERROR AcceptWalletTransaction()\u5931\u8d25 2 DENIED \u6b64\u8282\u70b9\u4e0d\u63a5\u53d7IP Transactions 2.15 ping \u00b6 2.16 alert \u00b6 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? message var_str \u5411\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9\u53d1\u51fa\u7684\u7cfb\u7edf\u6d88\u606f ? signature var_str \u53ef\u7531\u516c\u94a5\u9a8c\u8bc1Satoshi\u6388\u6743\u6216\u521b\u5efa\u4e86\u6b64\u4fe1\u606f\u7684\u7b7e\u540d","title":"\u901a\u4fe1\u534f\u8bae"},{"location":"bitcoin/protocal/#_1","text":"","title":"\u6bd4\u7279\u5e01\u901a\u4fe1\u534f\u8bae"},{"location":"bitcoin/protocal/#1","text":"","title":"1 \u5171\u7528\u7ed3\u6784"},{"location":"bitcoin/protocal/#11-message","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 magic uint32_t \u7528\u4e8e\u8bc6\u522b\u6d88\u606f\u7684\u6765\u6e90\u7f51\u7edc\uff0c\u5f53\u6d41\u72b6\u6001\u4f4d\u7f6e\u65f6\uff0c\u5b83\u8fd8\u7528\u4e8e\u5bfb\u627e\u4e0b\u4e00\u6761\u6d88\u606f 12 command char[12] \u8bc6\u522b\u5305\u5185\u5bb9\u7684ASCII\u5b57\u4e32\uff0c\u7528NULL\u5b57\u7b26\u8865\u6ee1\uff0c(\u4f7f\u7528\u975eNULL\u5b57\u7b26\u586b\u5145\u4f1a\u88ab\u62d2\u7edd) 4 length uint32_t payload\u7684\u5b57\u8282\u6570 4 checksum uint32_t sha256(sha256(payload)) \u7684\u524d4\u4e2a\u5b57\u8282(\u4e0d\u5305\u542b\u5728version \u6216 verack \u4e2d) ? payload uchar[] \u5b9e\u9645\u6570\u636e command char \u8303\u56f4 [-128, 127], \u7b2c 1 \u4f4d\u8868\u793a\u7b26\u53f7\uff0c0 \u4e3a\u6b63\uff0c1 \u4e3a\u8d1f uchar[] \u8303\u56f4 [0, 255] command \u5c31\u662f\u6d88\u606f\u7684\u7c7b\u578b\uff0c\u76ee\u524d\u6d89\u53ca\u7684\u7c7b\u578b\u6709\uff1a version verack addr inv getdata getblocks getheaders tx block headers getaddr ping alert merkleblock mempool pong notfound filterload filteradd filterclear reject sendheaders feefilter sendcmpct cmpctblock getblocktxn blocktxn Note \u5bf9 payload (\u6d88\u606f\u4f53) \u7684 2 \u6b21 sha256 \u54c8\u5e0c\u4e4b\u540e\u7684\u524d 4 \u4e2a\u5b57\u8282\uff0c\u8ddf git \u7528\u6cd5\u7c7b\u4f3c\uff0c\u524d\u51e0\u4f4d\u8db3\u4ee5\u8d77\u5230\u533a\u522b\u7684\u4f5c\u7528 \u5e94\u8be5 \u4e0d\u662f \u7528\u4e8e\u9632\u6076\u610f\u7be1\u6539\u7684\uff0c\u56e0\u4e3a\u53d1\u51fa\u65b9\u81ea\u5df1\u53ef\u4ee5\u91cd\u65b0\u8ba1\u7b97\uff0c\u540c\u65f6\u6539 payload \u548c checksum \u5e94\u8be5 \u662f \u9632\u6b62\u7f51\u7edc\u4f20\u8f93\u3001\u8bfb\u53d6\u9519\u8bef\u4e4b\u7c7b\u7684\u5bfc\u81f4\u6570\u636e\u4e0d\u5b8c\u6574 version, verack \u8fd9 2 \u4e2a\u6d88\u606f\u6ca1\u6709 checksum\uff0c\u56e0\u4e3a\u6ca1\u6709 payload \u5df2\u5b9a\u4e49\u7684magic\u503c\uff1a Network Magic value Sent over wire as main 0xD9B4BEF9 F9 BE B4 D9 testnet 0xDAB5BFFA FA BF B5 DA testnet3 0x0709110B 0B 11 09 07 namecoin 0xFEB4BEF9 F9 BE B4 FE","title":"1.1 Message(\u6d88\u606f)"},{"location":"bitcoin/protocal/#1212-variable-length-integer","text":"\u503c \u5b58\u50a8\u957f\u5ea6 \u683c\u5f0f < 0xfd 1 uint8_t <= 0xffff 3 0xfd + uint16_t <= 0xffffffff 5 0xfe + uint32_t - 9 0xff + uint64_t","title":"1.2.1.2 Variable length integer (\u53d8\u957f\u6574\u6570)"},{"location":"bitcoin/protocal/#1213-variable-length-string","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? length var_int \u5b57\u7b26\u4e32\u957f\u5ea6 ? string char[] \u5b57\u7b26\u4e32\u672c\u8eab(\u53ef\u4e3a\u7a7a)","title":"1.2.1.3 Variable length string (\u53d8\u957f\u5b57\u7b26\u4e32)"},{"location":"bitcoin/protocal/#1214-network-address","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 8 services uint64_t \u4e0eversion \u6d88\u606f\u4e2d\u7684service(s)\u76f8\u540c 16 IPv6/4 char[16] Ipv6\u5730\u5740\uff0c\u4ee5\u7f51\u7edc\u5b57\u8282\u987a\u5e8f\u5b58\u50a8\u3002 2 port uint16_t \u7aef\u53e3\u53f7\uff0c\u4ee5\u7f51\u7edc\u5b57\u8282\u987a\u5e8f\u5b58\u50a8\u3002 Note \u5b98\u65b9\u5ba2\u6237\u7aef\u4ec5\u652f\u6301IPv4\uff0c\u4ec5\u8bfb\u53d6\u6700\u540e4\u4e2a\u5b57\u8282\u4ee5\u83b7\u53d6IPv4\u5730\u5740\u3002 IPv4\u5730\u5740\u4ee516\u5b57\u8282\u7684IPv4\u6620\u5c04\u4f4d\u5740\u683c\u5f0f\u5199\u5165\u7ed3\u6784\u3002(12\u5b57\u8282 00 00 00 00 00 00 00 00 00 00 FF FF, \u540e\u8ddf4 \u5b57\u8282IPv4\u5730\u5740)","title":"1.2.1.4 Network address (\u7f51\u7edc\u5730\u5740)"},{"location":"bitcoin/protocal/#1215-inventory-vectors","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 type uint32_t \u5bf9\u8c61\u7c7b\u578b\u6807\u8bc6 32 hash char[32] \u5bf9\u8c61\u6563\u5217\u503c \u76ee\u524d\u5bf9\u8c61\u7c7b\u578b\u6807\u8bc6\u5df2\u7ecf\u5b9a\u4e49\u5982\u4e0b3\u4e2a\u503c Value Name Description 0 ERROR Any data of with this number may be ignored 1 MSG_TX Hash is related to a transaction 2 MSG_BLOCK Hash is related to a data block 3 MSG_FILTERED_BLOCK Hash of a block header; identical to MSG_BLOCK. Only to be used in getdata message. Indicates the reply should be a merkleblock message rather than a block message; this only works if a bloom filter has been set. 4 MSG_CMPCT_BLOCK Hash of a block header; identical to MSG_BLOCK. Only to be used in getdata message. Indicates the reply should be a cmpctblock message. See BIP 152 for more info.","title":"1.2.1.5 Inventory Vectors (\u6e05\u5355\u5411\u91cf)"},{"location":"bitcoin/protocal/#1216-block-headers-block","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 version uint32_t Block\u7248\u672c\u4fe1\u606f\uff0c\u57fa\u4e8e\u521b\u5efa\u8be5block\u7684\u8f6f\u4ef6\u7248\u672c 32 prev_block char[32] \u8be5block\u524d\u4e00block\u7684\u6563\u5217 32 merkle_root char[32] \u4e0e\u8be5block\u76f8\u5173\u7684\u5168\u90e8\u4ea4\u6613\u4e4b\u6563\u5217(Merkle\u6811) 4 timestamp uint32_t \u8bb0\u5f55block\u521b\u5efa\u65f6\u95f4\u7684\u65f6\u95f4\u6233 4 bits uint32_t \u521b\u5efablock\u7684\u8ba1\u7b97\u96be\u5ea6 4 nonce uint32_t \u7528\u4e8e\u751f\u6210block\u7684\u4e34\u65f6\u6570\u636e 1 txn_count uint8_t \u4ea4\u6613\u6570\uff0c\u8fd9\u4e2a\u503c\u603b\u662f0","title":"1.2.1.6 Block Headers (Block\u5934\u90e8)"},{"location":"bitcoin/protocal/#2","text":"","title":"2 \u6d88\u606f\u7c7b\u578b"},{"location":"bitcoin/protocal/#21-version","text":"\u4e00\u4e2a\u8282\u70b9\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u5b83\u7acb\u5373\u5ba3\u544a\u5176\u7248\u672c\u3002\u5728\u901a\u4fe1\u53cc\u65b9\u90fd\u5f97\u5230\u5bf9\u65b9\u7248\u672c\u4e4b\u524d\uff0c\u4e0d\u4f1a\u6709\u5176\u4ed6\u901a\u4fe1 \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 version uint32_t \u8282\u70b9\u4f7f\u7528\u7684\u534f\u8bae\u7248\u672c\u6807\u8bc6 8 services uint64_t \u8be5\u8fde\u63a5\u5141\u8bb8\u7684\u7279\u6027(bitfield) 8 timestamp uint64_t \u4ee5\u79d2\u8ba1\u7b97\u7684\u6807\u51c6UNIX\u65f6\u95f4\u6233 26 addr_me net_addr \u751f\u6210\u6b64\u6d88\u606f\u7684\u8282\u70b9\u7684\u7f51\u7edc\u5730\u5740 version >= 106 26 addr_you net_addr \u63a5\u6536\u6b64\u6d88\u606f\u7684\u8282\u70b9\u7684\u7f51\u7edc\u5730\u5740 8 nonce uint64_t \u8282\u70b9\u7684\u968f\u673aid\uff0c\u7528\u4e8e\u4fa6\u6d4b\u8fd9\u4e2a\u8fde\u63a5 ? sub_version_num var_str \u8f85\u52a9\u7248\u672c\u4fe1\u606f version >= 209 4 start_height uint32_t \u53d1\u9001\u8282\u70b9\u63a5\u6536\u5230\u7684\u6700\u65b0block","title":"2.1 version"},{"location":"bitcoin/protocal/#22-verack","text":"\u7248\u672c\u4e0d\u4f4e\u4e8e209\u7684\u5ba2\u6237\u7aef\u5728\u5e94\u7b54version\u6d88\u606f\u65f6\u53d1\u9001verack\u6d88\u606f","title":"2.2 verack"},{"location":"bitcoin/protocal/#23-addr","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 1+ count var_int \u5730\u5740\u6570 30x? addr_list (uint32_t + net_addr)[] \u7f51\u7edc\u4e0a\u5176\u4ed6\u8282\u70b9\u7684\u5730\u5740\uff0c\u7248\u672c\u4f4e\u4e8e209\u65f6\u4ec5\u8bfb\u53d6\u7b2c\u4e00\u6761","title":"2.3 addr"},{"location":"bitcoin/protocal/#24-inv","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? count var_int \u6e05\u5355(inventory)\u6570\u91cf 36x? inventory inv_vect[] \u6e05\u5355(inventory)\u6570\u636e","title":"2.4 inv"},{"location":"bitcoin/protocal/#25-getdata","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? count var_int \u6e05\u5355(inventory)\u6570\u91cf 36x? inventory inv_vect[] \u6e05\u5355(inventory)\u6570\u636e","title":"2.5 getdata"},{"location":"bitcoin/protocal/#26-getblocks","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 1+ start count var_int hash_start \u7684\u6570\u91cf 32+ hash_start char[32] \u53d1\u9001\u8282\u70b9\u5df2\u77e5\u7684\u6700\u65b0block\u6563\u5217 32 hash_stop char[32] \u8bf7\u6c42\u7684\u6700\u540e\u4e00\u4e2ablock\u7684\u6563\u5217\uff0c\u82e5\u8981\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684block\u5219\u8bbe\u4e3a0","title":"2.6 getblocks"},{"location":"bitcoin/protocal/#27-getheaders","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 1+ start count var_int hash_start \u7684\u6570\u91cf 32+ hash_start char[32] \u53d1\u9001\u8282\u70b9\u5df2\u77e5\u7684\u6700\u65b0block\u6563\u5217 32 hash_stop char[32] \u8bf7\u6c42\u7684\u6700\u540e\u4e00\u4e2ablock\u7684\u6563\u5217\uff0c\u82e5\u8981\u83b7\u5f97\u5c3d\u53ef\u80fd\u591a\u7684block\u5219\u8bbe\u4e3a0","title":"2.7 getheaders"},{"location":"bitcoin/protocal/#28-tx","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 version uint32_t \u4ea4\u6613\u6570\u636e\u683c\u5f0f\u7248\u672c 1+ tx_in count var_int \u4ea4\u6613\u7684\u8f93\u5165\u6570 41+ tx_in tx_in[] \u4ea4\u6613\u8f93\u5165\u6216\u6bd4\u7279\u5e01\u6765\u6e90\u5217\u8868 1+ tx_out count var_int \u4ea4\u6613\u7684\u8f93\u51fa\u6570 8+ tx_out tx_out[] \u4ea4\u6613\u8f93\u51fa\u6216\u6bd4\u7279\u5e01\u53bb\u5411\u5217\u8868 4 lock_time uint32_t \u9501\u5b9a\u4ea4\u6613\u7684\u671f\u9650\u6216block\u6570\u76ee\u3002\u5982\u679c\u4e3a0\u5219\u4ea4\u6613\u4e00\u76f4\u88ab\u9501\u5b9a\u3002\u672a\u9501\u5b9a\u7684\u4ea4\u6613\u4e0d\u53ef\u5305\u542b\u5728block\u4e2d\uff0c\u5e76\u53ef\u4ee5\u5728\u8fc7\u671f\u524d\u4fee\u6539(\u76ee\u524dbitcon\u4e0d\u5141\u8bb8\u66f4\u6539\u4ea4\u6613\uff0c\u6240\u4ee5\u6ca1\u6709\u7528) tx_in \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 36 previous_output outpoint \u5bf9\u524d\u4e00\u8f93\u51fa\u7684\u5f15\u7528 1+ script length var_int signature script \u7684\u957f\u5ea6 ? signature script uchar[] \u7528\u4e8e\u786e\u8ba4\u4ea4\u6613\u6388\u6743\u7684\u8ba1\u7b97\u811a\u672c 4 sequence uint32_t \u53d1\u9001\u8005\u5b9a\u4e49\u7684\u4ea4\u6613\u7248\u672c\uff0c\u7528\u4e8e\u5728\u4ea4\u6613\u88ab\u5199\u5165block\u4e4b\u524d\u66f4\u6539\u4ea4\u6613 outPoint \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 32 hash char[32] \u5f15\u7528\u7684\u4ea4\u6613\u7684\u6563\u5217 4 index uint32_t \u6307\u5b9a\u8f93\u51fa\u7684\u7d22\u5f15\uff0c\u7b2c\u4e00\u7b14\u8f93\u51fa\u7684\u7d22\u5f15\u662f0\uff0c\u4ee5\u6b64\u7c7b\u63a8 tx_out \u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 8 value uint64_t \u4ea4\u6613\u7684\u6bd4\u7279\u5e01\u6570\u91cf(\u5355\u4f4d\u662f0.00000001) 1+ pk_script length var_int pk_script\u7684\u957f\u5ea6 ? pk_script uchar[] Usually contains the public key as a Bitcoin script setting up conditions to claim this output.","title":"2.8 tx"},{"location":"bitcoin/protocal/#29-block","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 version uint32_t block\u7248\u672c\u4fe1\u606f\uff0c\u57fa\u4e8e\u751f\u6210block\u7684\u8f6f\u4ef6\u7248\u672c 32 prev_block char[32] \u8fd9\u4e00block\u5f15\u7528\u7684\u524d\u4e00block\u4e4b\u6563\u5217 32 merkle_root char[32] \u4e0e\u8fd9\u4e00block\u76f8\u5173\u7684\u5168\u90e8\u4ea4\u6613\u4e4b\u6563\u5217(Merkle\u6811) 4 timestamp uint32_t \u8bb0\u5f55block\u521b\u5efa\u65f6\u95f4\u7684\u65f6\u95f4\u6233 4 bits uint32_t \u8fd9\u4e00block\u7684\u8ba1\u7b97\u96be\u5ea6 4 nonce uint32_t \u7528\u4e8e\u751f\u6210\u8fd9\u4e00block\u7684nonce\u503c ? txn_count var_int \u4ea4\u6613\u6570\u91cf ? txns tx[] \u4ea4\u6613\uff0c\u4ee5tx\u683c\u5f0f\u5b58\u50a8","title":"2.9 block"},{"location":"bitcoin/protocal/#210-headers","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? count var_int block\u5934\u6570\u91cf 77x? headers block_header[] block\u5934","title":"2.10 headers"},{"location":"bitcoin/protocal/#211-getaddr","text":"!!! question getaddr \u4f3c\u4e4e\u4e5f\u6ca1\u6709\u6d88\u606f\u4f53?","title":"2.11 getaddr"},{"location":"bitcoin/protocal/#212-checkorder","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e Fields from CMerkleTx ? hashBlock ? vMerkleBranch ? nIndex Fields from CWalletTx ? vtxPrev ? mapValue ? vOrderForm ? fTimeReceivedIsTxTime ? nTimeReceived ? fFromMe ? fSpent","title":"2.12 checkorder"},{"location":"bitcoin/protocal/#213-submitorder","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 32 hash char[32] \u4ea4\u6613\u6563\u5217 ? wallet_entry CWalletTx \u4e0echeckorder\u7684payload\u76f8\u540c","title":"2.13 submitorder"},{"location":"bitcoin/protocal/#214-reply","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e 4 reply uint32_t \u5e94\u7b54\u4ee3\u7801 \u53ef\u80fd\u503c: \u503c \u540d\u79f0 \u8bf4\u660e 0 SUCCESS IP Transaction\u53ef\u4ee5\u6267\u884c(\u56de\u5e94checkorder)\u6216\u5df2\u7ecf\u88ab\u63a5\u53d7(\u56de\u5e94submitorder) 1 WALLET_ERROR AcceptWalletTransaction()\u5931\u8d25 2 DENIED \u6b64\u8282\u70b9\u4e0d\u63a5\u53d7IP Transactions","title":"2.14 reply"},{"location":"bitcoin/protocal/#215-ping","text":"","title":"2.15 ping"},{"location":"bitcoin/protocal/#216-alert","text":"\u5b57\u6bb5\u5c3a\u5bf8 \u63cf\u8ff0 \u6570\u636e\u7c7b\u578b \u8bf4\u660e ? message var_str \u5411\u7f51\u7edc\u4e2d\u6240\u6709\u8282\u70b9\u53d1\u51fa\u7684\u7cfb\u7edf\u6d88\u606f ? signature var_str \u53ef\u7531\u516c\u94a5\u9a8c\u8bc1Satoshi\u6388\u6743\u6216\u521b\u5efa\u4e86\u6b64\u4fe1\u606f\u7684\u7b7e\u540d","title":"2.16 alert"},{"location":"bitcoin/structure/","text":"\b\u6bd4\u7279\u5e01\u6570\u636e\u7ed3\u6784 \u00b6 1. \u533a\u5757\u5b58\u50a8 \u00b6 blocks/blk*.dat \u7684\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u5b9e\u9645\u7684\u5757\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4ee5\u7f51\u7edc\u683c\u5f0f\u5b58\u50a8\u3002\u5b83\u4eec\u4ec5\u7528\u4e8e\u91cd\u65b0\u626b\u63cf\u94b1\u5305\u4e2d\u4e22\u5931\u7684\u4ea4\u6613\uff0c\u5c06\u8fd9\u4e9b\u4ea4\u6613\u91cd\u65b0\u7ec4\u7ec7\u5230\u94fe\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u5e76\u5c06\u6570\u636e\u5757\u63d0\u4f9b\u7ed9\u5176\u4ed6\u6b63\u5728\u540c\u6b65\u6570\u636e\u7684\u8282\u70b9\u3002 blocks/index/* \u662f\u4e00\u4e2alevelDB\u6570\u636e\u5e93\uff0c\u5b58\u50a8\u7740\u76ee\u524d\u5df2\u77e5\u5757\u7684\u5143\u6570\u636e\uff0c\u8fd9\u4e9b\u5143\u6570\u636e\u8bb0\u5f55\u6240\u6709\u5df2\u77e5\u7684\u5757\u4ee5\u53ca\u5b83\u4eec\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u7684\u4f4d\u7f6e\u3002\u6ca1\u6709\u8fd9\u4e9b\u6587\u4ef6\uff0c\u67e5\u627e\u4e00\u4e2a\u5757\u5c06\u662f\u975e\u5e38\u6162\u7684\u3002 chainstate/* \u662f\u4e00\u4e2alevelDB\u6570\u636e\u5e93\uff0c\u4ee5\u7d27\u51d1\u7684\u5f62\u5f0f\u5b58\u50a8\u6240\u6709\u5f53\u524d\u672a\u82b1\u8d39\u7684\u4ea4\u6613\u4ee5\u53ca\u5b83\u4eec\u7684\u5143\u6570\u636e\u3002\u8fd9\u91cc\u7684\u6570\u636e\u5bf9\u4e8e\u9a8c\u8bc1\u65b0\u4f20\u5165\u7684\u5757\u548c\u4ea4\u6613\u662f\u5fc5\u8981\u7684\u3002\u5728\u7406\u8bba\u4e0a\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u4ece\u5757\u6570\u636e\u4e2d\u91cd\u5efa\uff0c\u4f46\u662f\u8fd9\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u6ca1\u6709\u8fd9\u4e9b\u6570\u636e\u4e5f\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4f46\u662f\u9700\u8981\u73b0\u6709\u5757\u6570\u636e\u8fdb\u884c\u626b\u9762\uff0c\u8fd9\u65e0\u7591\u662f\u975e\u5e38\u6162\u7684\u3002 blocks/rev*.dat \u4e2d\u5305\u542b\u4e86\u201c\u64a4\u9500\u201d\u6570\u636e\uff0c\u53ef\u4ee5\u5c06\u533a\u5757\u89c6\u4e3a\u94fe\u7684\u201c\u8865\u4e01\u201d\uff08\u5b83\u4eec\u6d88\u8017\u4e00\u4e9b\u672a\u82b1\u8d39\u7684\u8f93\u51fa\u5e76\u751f\u6210\u65b0\u7684\u8f93\u51fa\uff09\uff0c\u90a3\u4e48\u8fd9\u4e9b\u64a4\u9500\u6570\u636e\u5c06\u662f\u53cd\u5411\u8865\u4e01\u3002\u5982\u679c\u9700\u8981\u56de\u6eda\u94fe\uff0c\u8fd9\u4e9b\u6570\u636e\u5c06\u662f\u5fc5\u987b\u7684\u3002 \u6bd4\u7279\u5e01\u7a0b\u5e8f\u4ece\u7f51\u7edc\u4e2d\u63a5\u53d7\u6570\u636e\u540e\uff0c\u4f1a\u5c06\u6570\u636e\u4ee5.dat\u7684\u5f62\u5f0f\u8f6c\u50a8\u5230\u78c1\u76d8\u4e0a\u3002 \u4e00\u4e2a\u5757\u6587\u4ef6\u5927\u7ea6\u4e3a128MB\u3002\u6bcf\u4e2a\u5757\u6587\u4ef6\u4f1a\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u64a4\u9500\u6587\u4ef6\uff0c\u6bd4\u5982\u6587\u4ef6blocks/blk1234.dat\u548cblocks/recv1234.dat\u5bf9\u5e94\u3002 2. \u5757\u7ed3\u6784 \u00b6 \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 magic_number uint32 \u603b\u662f 0xD9B4BEF9, \u4f5c\u4e3a\u533a\u5757\u4e4b\u95f4\u7684\u5206\u9694\u7b26 4 block_size uint32 \u540e\u9762\u6570\u636e\u5230\u5757\u7ed3\u675f\u7684\u5b57\u8282\u6570 80 block_header char[] block heaer varies transaction_cnt uint \u4ea4\u6613\u6570\u91cf varies transaction char[] \u4ea4\u6613\u8be6\u60c5 \u4ece\u539f\u59cb\u6570\u636e\u4e2d\u8bfb\u53d6\u7684\u6d41\u7a0b\u5927\u6982\u5982\u4e0b \u8bfb\u53d64\u4e2a\u5b57\u8282\uff0c\u6bd4\u5bf9 magic_number \u4e00\u65e6\u5339\u914d\uff0c\u8bfb\u53d6\u540e4\u4e2a\u5b57\u8282\uff0c\u5f97\u5230\u5757\u7684\u5927\u5c0f m \u8bfb\u53d6\u540e\u9762 m \u4e2a\u5b57\u8282\uff0c\u5f97\u5230\u533a\u5757\u7684\u6570\u636e \u8fd4\u56de\u7b2c\u4e00\u6b65\uff0c\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u533a\u5757 3. Block Header \u00b6 block header\u56fa\u5b9a 80 \u5b57\u8282\u5927\u5c0f\uff0c\u7ed3\u6784\u5982\u4e0b \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 version int32_t \u7248\u672c\u53f7 32 previous_block_hash char[32] \u524d\u4e00\u4e2a block \u7684 \bhash \u503c 32 merkle_root_hash char[32] \u533a\u5757\u5185\u6240\u6709\u4ea4\u6613\u7684 merkle_hash \u503c 4 time uint32 unix\u65f6\u95f4\u6233\uff0c\u77ff\u5de5\u6316\u77ff\u7684\u65f6\u95f4 4 nBits unit32 \u8be5\u5757\u7684\u6807\u9898hash\u5fc5\u987b\u5c0f\u4e8e\u7684\u503c\u3002\u96be\u5ea6 4 nonce unit32 \b\u968f\u673a\u503c\uff0c\u7528\u4e8e\u4ea7\u751f\u6ee1\u8db3\u96be\u5ea6\u7684hash\u503c 4. \u4ea4\u6613 \u00b6 \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 version unit32 \u4ea4\u6613\u7248\u672c\u53f7 varint tx_in_count uint \u4ea4\u6613\u8f93\u5165\u6570\u91cf varies tx_in tx_in \u4ea4\u6613\u8f93\u5165 varint tx_out_count uint \u4ea4\u6613\u8f93\u51fa\u6570\u91cf varies txt_out tx_out \u4ea4\u6613\u8f93\u51fa 4 lock_time uint32 \u9501\u5b9a\u65f6\u95f4 Note \u4ea4\u6613\u4e2d\u4f7f\u7528\u53ef\u53d8\u957f\u5ea6\u6574\u6570\u6765\u8868\u793a\u4e0b\u4e00\u6761\u6570\u636e\u4e2d\u7684\u5b57\u8282\u6570\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u6570\u503c\uff0c\u5b58\u50a8\u7684\u7a7a\u95f4\u4e0d\u4e00\u6837\u3002 \u5bf9\u4e8e0\uff5e252\u7684\u503c\uff0c\u53ea\u5360\u7528\u4e00\u4e2a\u5b57\u8282\uff1b\u5bf9\u4e8e\u5176\u4ed6\u5c0f\u4e8e0xffffffffffffffff\u7684\u503c\uff0c\u7b2c\u4e00\u4e2a\u5b57\u8282\u5c06\u6210\u4e3a\u957f\u5ea6\u6807\u8bc6\u4f4d\u3002\u503c\u548c\u5b58\u50a8\u7a7a\u95f4\u7684\u5173\u7cfb\u5982\u4e0b\u8868\uff1a \u503c \u5b58\u50a8\u7a7a\u95f4 (\u5b57\u8282) \u6570\u636e\u7c7b\u578b >=0 && <=252 1 uint8_t >=253 && <= 0xffff 3 \b\u540e 2 \u4e2a\u5b57\u8282 uint16_t >=0x10000 && <= 0xffffffff 5 \u540e 4 \u4e2a\u5b57\u8282 uint32_t >=0x100000000 && <= 0xffffffffffffffff 9 \u540e 8 \u4e2a\u5b57\u8282uint64_t Note \u5c31\u662f\u8bf4 \u82e5 tx_in_count \u7684\u7b2c 1 \b\u5b57\u8282 <= 252\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u8282\u672c\u8eab\u5c31\u662f \u503c \u82e5 tx_in_count \u7684\u7b2c 1 \b\u5b57\u8282 = 253\uff0c\u90a3\u4e48 \u503c \u5b58\u50a8\u5728\u540e\u9762\u7684 2 \u4e2a\u5b57\u8282\u91cc \u82e5 tx_in_count \u7684\u7b2c 1 \b\u5b57\u8282 = 254\uff0c\u90a3\u4e48 \u503c \u5b58\u50a8\u5728\u540e\u9762\u7684 4 \u4e2a\u5b57\u8282\u91cc \u82e5 tx_in_count \u7684\u7b2c 1 \b\u5b57\u8282 = 255\uff0c\u90a3\u4e48 \u503c \u5b58\u50a8\u5728\u540e\u9762\u7684 8 \u4e2a\u5b57\u8282\u91cc 5. \u4ea4\u6613\u8f93\u5165 \u00b6 \u6bcf\u4e2a\u975ecoinbase\u7684\u4ea4\u6613\u8f93\u5165\u90fd\u662f\u4e4b\u524d\u67d0\u4e2a\u4ea4\u6613\u7684\u4ea4\u6613\u8f93\u51fa \u4ea4\u6613\u8f93\u5165\u7684\u7ed3\u6784\u5982\u4e0b: \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 32 previous_output_hash outpoint \u524d\u7f6e\u4ea4\u6613h\bash 4 previous_output_index uint32 \u524d\u7f6e\u4ea4\u6613index varint script_bytes uint \u89e3\u9501\u811a\u672c\u957f\u5ea6 varies signature_script char[] \u89e3\u9501\u811a\u672c 4 sequence uint32 \u5e8f\u5217\u53f7 6. \u4ea4\u6613\u8f93\u51fa \u00b6 \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 8 value int64 \u82b1\u8d39\u7684\u6570\u91cf\uff0c\u5355\u4f4d\u662f\u806a 1+ pk_sript_size uint pubkey\u811a\u672c\u4e2d\u7684\u5b57\u8282\u6570\u91cf varies pk_script char[] \u82b1\u8d39\u8fd9\u7b14\u8f93\u51fa\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6","title":"\u7ed3\u6784"},{"location":"bitcoin/structure/#_1","text":"","title":"\b\u6bd4\u7279\u5e01\u6570\u636e\u7ed3\u6784"},{"location":"bitcoin/structure/#1","text":"blocks/blk*.dat \u7684\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u5b9e\u9645\u7684\u5757\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u4ee5\u7f51\u7edc\u683c\u5f0f\u5b58\u50a8\u3002\u5b83\u4eec\u4ec5\u7528\u4e8e\u91cd\u65b0\u626b\u63cf\u94b1\u5305\u4e2d\u4e22\u5931\u7684\u4ea4\u6613\uff0c\u5c06\u8fd9\u4e9b\u4ea4\u6613\u91cd\u65b0\u7ec4\u7ec7\u5230\u94fe\u7684\u4e0d\u540c\u90e8\u5206\uff0c\u5e76\u5c06\u6570\u636e\u5757\u63d0\u4f9b\u7ed9\u5176\u4ed6\u6b63\u5728\u540c\u6b65\u6570\u636e\u7684\u8282\u70b9\u3002 blocks/index/* \u662f\u4e00\u4e2alevelDB\u6570\u636e\u5e93\uff0c\u5b58\u50a8\u7740\u76ee\u524d\u5df2\u77e5\u5757\u7684\u5143\u6570\u636e\uff0c\u8fd9\u4e9b\u5143\u6570\u636e\u8bb0\u5f55\u6240\u6709\u5df2\u77e5\u7684\u5757\u4ee5\u53ca\u5b83\u4eec\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u7684\u4f4d\u7f6e\u3002\u6ca1\u6709\u8fd9\u4e9b\u6587\u4ef6\uff0c\u67e5\u627e\u4e00\u4e2a\u5757\u5c06\u662f\u975e\u5e38\u6162\u7684\u3002 chainstate/* \u662f\u4e00\u4e2alevelDB\u6570\u636e\u5e93\uff0c\u4ee5\u7d27\u51d1\u7684\u5f62\u5f0f\u5b58\u50a8\u6240\u6709\u5f53\u524d\u672a\u82b1\u8d39\u7684\u4ea4\u6613\u4ee5\u53ca\u5b83\u4eec\u7684\u5143\u6570\u636e\u3002\u8fd9\u91cc\u7684\u6570\u636e\u5bf9\u4e8e\u9a8c\u8bc1\u65b0\u4f20\u5165\u7684\u5757\u548c\u4ea4\u6613\u662f\u5fc5\u8981\u7684\u3002\u5728\u7406\u8bba\u4e0a\uff0c\u8fd9\u4e9b\u6570\u636e\u53ef\u4ee5\u4ece\u5757\u6570\u636e\u4e2d\u91cd\u5efa\uff0c\u4f46\u662f\u8fd9\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u6ca1\u6709\u8fd9\u4e9b\u6570\u636e\u4e5f\u53ef\u4ee5\u5bf9\u6570\u636e\u8fdb\u884c\u9a8c\u8bc1\uff0c\u4f46\u662f\u9700\u8981\u73b0\u6709\u5757\u6570\u636e\u8fdb\u884c\u626b\u9762\uff0c\u8fd9\u65e0\u7591\u662f\u975e\u5e38\u6162\u7684\u3002 blocks/rev*.dat \u4e2d\u5305\u542b\u4e86\u201c\u64a4\u9500\u201d\u6570\u636e\uff0c\u53ef\u4ee5\u5c06\u533a\u5757\u89c6\u4e3a\u94fe\u7684\u201c\u8865\u4e01\u201d\uff08\u5b83\u4eec\u6d88\u8017\u4e00\u4e9b\u672a\u82b1\u8d39\u7684\u8f93\u51fa\u5e76\u751f\u6210\u65b0\u7684\u8f93\u51fa\uff09\uff0c\u90a3\u4e48\u8fd9\u4e9b\u64a4\u9500\u6570\u636e\u5c06\u662f\u53cd\u5411\u8865\u4e01\u3002\u5982\u679c\u9700\u8981\u56de\u6eda\u94fe\uff0c\u8fd9\u4e9b\u6570\u636e\u5c06\u662f\u5fc5\u987b\u7684\u3002 \u6bd4\u7279\u5e01\u7a0b\u5e8f\u4ece\u7f51\u7edc\u4e2d\u63a5\u53d7\u6570\u636e\u540e\uff0c\u4f1a\u5c06\u6570\u636e\u4ee5.dat\u7684\u5f62\u5f0f\u8f6c\u50a8\u5230\u78c1\u76d8\u4e0a\u3002 \u4e00\u4e2a\u5757\u6587\u4ef6\u5927\u7ea6\u4e3a128MB\u3002\u6bcf\u4e2a\u5757\u6587\u4ef6\u4f1a\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u64a4\u9500\u6587\u4ef6\uff0c\u6bd4\u5982\u6587\u4ef6blocks/blk1234.dat\u548cblocks/recv1234.dat\u5bf9\u5e94\u3002","title":"1. \u533a\u5757\u5b58\u50a8"},{"location":"bitcoin/structure/#2","text":"\u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 magic_number uint32 \u603b\u662f 0xD9B4BEF9, \u4f5c\u4e3a\u533a\u5757\u4e4b\u95f4\u7684\u5206\u9694\u7b26 4 block_size uint32 \u540e\u9762\u6570\u636e\u5230\u5757\u7ed3\u675f\u7684\u5b57\u8282\u6570 80 block_header char[] block heaer varies transaction_cnt uint \u4ea4\u6613\u6570\u91cf varies transaction char[] \u4ea4\u6613\u8be6\u60c5 \u4ece\u539f\u59cb\u6570\u636e\u4e2d\u8bfb\u53d6\u7684\u6d41\u7a0b\u5927\u6982\u5982\u4e0b \u8bfb\u53d64\u4e2a\u5b57\u8282\uff0c\u6bd4\u5bf9 magic_number \u4e00\u65e6\u5339\u914d\uff0c\u8bfb\u53d6\u540e4\u4e2a\u5b57\u8282\uff0c\u5f97\u5230\u5757\u7684\u5927\u5c0f m \u8bfb\u53d6\u540e\u9762 m \u4e2a\u5b57\u8282\uff0c\u5f97\u5230\u533a\u5757\u7684\u6570\u636e \u8fd4\u56de\u7b2c\u4e00\u6b65\uff0c\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u533a\u5757","title":"2. \u5757\u7ed3\u6784"},{"location":"bitcoin/structure/#3-block-header","text":"block header\u56fa\u5b9a 80 \u5b57\u8282\u5927\u5c0f\uff0c\u7ed3\u6784\u5982\u4e0b \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 version int32_t \u7248\u672c\u53f7 32 previous_block_hash char[32] \u524d\u4e00\u4e2a block \u7684 \bhash \u503c 32 merkle_root_hash char[32] \u533a\u5757\u5185\u6240\u6709\u4ea4\u6613\u7684 merkle_hash \u503c 4 time uint32 unix\u65f6\u95f4\u6233\uff0c\u77ff\u5de5\u6316\u77ff\u7684\u65f6\u95f4 4 nBits unit32 \u8be5\u5757\u7684\u6807\u9898hash\u5fc5\u987b\u5c0f\u4e8e\u7684\u503c\u3002\u96be\u5ea6 4 nonce unit32 \b\u968f\u673a\u503c\uff0c\u7528\u4e8e\u4ea7\u751f\u6ee1\u8db3\u96be\u5ea6\u7684hash\u503c","title":"3. Block Header"},{"location":"bitcoin/structure/#4","text":"\u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 version unit32 \u4ea4\u6613\u7248\u672c\u53f7 varint tx_in_count uint \u4ea4\u6613\u8f93\u5165\u6570\u91cf varies tx_in tx_in \u4ea4\u6613\u8f93\u5165 varint tx_out_count uint \u4ea4\u6613\u8f93\u51fa\u6570\u91cf varies txt_out tx_out \u4ea4\u6613\u8f93\u51fa 4 lock_time uint32 \u9501\u5b9a\u65f6\u95f4 Note \u4ea4\u6613\u4e2d\u4f7f\u7528\u53ef\u53d8\u957f\u5ea6\u6574\u6570\u6765\u8868\u793a\u4e0b\u4e00\u6761\u6570\u636e\u4e2d\u7684\u5b57\u8282\u6570\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u6570\u503c\uff0c\u5b58\u50a8\u7684\u7a7a\u95f4\u4e0d\u4e00\u6837\u3002 \u5bf9\u4e8e0\uff5e252\u7684\u503c\uff0c\u53ea\u5360\u7528\u4e00\u4e2a\u5b57\u8282\uff1b\u5bf9\u4e8e\u5176\u4ed6\u5c0f\u4e8e0xffffffffffffffff\u7684\u503c\uff0c\u7b2c\u4e00\u4e2a\u5b57\u8282\u5c06\u6210\u4e3a\u957f\u5ea6\u6807\u8bc6\u4f4d\u3002\u503c\u548c\u5b58\u50a8\u7a7a\u95f4\u7684\u5173\u7cfb\u5982\u4e0b\u8868\uff1a \u503c \u5b58\u50a8\u7a7a\u95f4 (\u5b57\u8282) \u6570\u636e\u7c7b\u578b >=0 && <=252 1 uint8_t >=253 && <= 0xffff 3 \b\u540e 2 \u4e2a\u5b57\u8282 uint16_t >=0x10000 && <= 0xffffffff 5 \u540e 4 \u4e2a\u5b57\u8282 uint32_t >=0x100000000 && <= 0xffffffffffffffff 9 \u540e 8 \u4e2a\u5b57\u8282uint64_t Note \u5c31\u662f\u8bf4 \u82e5 tx_in_count \u7684\u7b2c 1 \b\u5b57\u8282 <= 252\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u8282\u672c\u8eab\u5c31\u662f \u503c \u82e5 tx_in_count \u7684\u7b2c 1 \b\u5b57\u8282 = 253\uff0c\u90a3\u4e48 \u503c \u5b58\u50a8\u5728\u540e\u9762\u7684 2 \u4e2a\u5b57\u8282\u91cc \u82e5 tx_in_count \u7684\u7b2c 1 \b\u5b57\u8282 = 254\uff0c\u90a3\u4e48 \u503c \u5b58\u50a8\u5728\u540e\u9762\u7684 4 \u4e2a\u5b57\u8282\u91cc \u82e5 tx_in_count \u7684\u7b2c 1 \b\u5b57\u8282 = 255\uff0c\u90a3\u4e48 \u503c \u5b58\u50a8\u5728\u540e\u9762\u7684 8 \u4e2a\u5b57\u8282\u91cc","title":"4. \u4ea4\u6613"},{"location":"bitcoin/structure/#5","text":"\u6bcf\u4e2a\u975ecoinbase\u7684\u4ea4\u6613\u8f93\u5165\u90fd\u662f\u4e4b\u524d\u67d0\u4e2a\u4ea4\u6613\u7684\u4ea4\u6613\u8f93\u51fa \u4ea4\u6613\u8f93\u5165\u7684\u7ed3\u6784\u5982\u4e0b: \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 32 previous_output_hash outpoint \u524d\u7f6e\u4ea4\u6613h\bash 4 previous_output_index uint32 \u524d\u7f6e\u4ea4\u6613index varint script_bytes uint \u89e3\u9501\u811a\u672c\u957f\u5ea6 varies signature_script char[] \u89e3\u9501\u811a\u672c 4 sequence uint32 \u5e8f\u5217\u53f7","title":"5. \u4ea4\u6613\u8f93\u5165"},{"location":"bitcoin/structure/#6","text":"\u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 8 value int64 \u82b1\u8d39\u7684\u6570\u91cf\uff0c\u5355\u4f4d\u662f\u806a 1+ pk_sript_size uint pubkey\u811a\u672c\u4e2d\u7684\u5b57\u8282\u6570\u91cf varies pk_script char[] \u82b1\u8d39\u8fd9\u7b14\u8f93\u51fa\u9700\u8981\u6ee1\u8db3\u7684\u6761\u4ef6","title":"6. \u4ea4\u6613\u8f93\u51fa"},{"location":"bitcoin/sync/","text":"1.3 \u540c\u6b65 \u00b6 1.3.1 \u540c\u6b65\u573a\u666f \u00b6 1.3.1.1 \u5efa\u7acb\u8fde\u63a5 \u00b6 \u4e00\u4e2a\u8282\u70b9\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u5b83\u7acb\u5373\u5ba3\u544a\u5176\u7248\u672c\uff0c\u53d1\u9001 version \u6d88\u606f\u3002\u5728\u901a\u4fe1\u53cc\u65b9\u90fd\u5f97\u5230\u5bf9\u65b9\u7248\u672c\u4e4b\u524d\uff0c\u4e0d\u4f1a\u6709\u5176\u4ed6\u901a\u4fe1 \u7248\u672c\u4e0d\u4f4e\u4e8e209\u7684\u5ba2\u6237\u7aef\u5728\u5e94\u7b54version\u6d88\u606f\u65f6\u53d1\u9001 verack \u6d88\u606f Note \u76f8\u540c\u7684 \u7248\u672c \u610f\u5473\u7740\u76f8\u540c\u7684\u7a0b\u5e8f 1.3.1.2 INV(MSG_BLOCK) \u7684\u53d1\u9001 \u00b6 \u6316\u5230\u65b0\u7684 block \u4ece\u5176\u4ed6\u8282\u70b9\u83b7\u53d6\u5230\u65b0\u7684 block\uff0c\u5373 \u63a5\u6536\u5230 cmpctblock \uff0c blocktxn , block \u8fd9\u4e09\u4e2a\u6d88\u606f\uff0c\u5e76\u786e\u8ba4\u4e4b\u540e \u5e94\u7b54 getblocks \u6d88\u606f Note \u5e94\u7b54 getblocks \u6d88\u606f\u65f6\uff0c\u53ea\u53d1\u9001 inv \u6d88\u606f\uff0c\u8ba9\u8bf7\u6c42\u7aef\u81ea\u5df1\u8fdb\u884c\u5bf9\u6bd4\u7b5b\u9009\uff0c\u6709\u786e\u5b9a\u9700\u8981\u7684 block \u65f6\uff0c\u8bf7\u6c42\u7aef\u4f1a\u53d1\u9001 getdata \u6765\u83b7\u53d6\u5b9e\u9645\u7684 block \u7684\u5168\u90e8\u4fe1\u606f 1.3.1.3 \bgetheaders \u7684\u53d1\u9001 \u00b6 \u65b0\u8282\u70b9 (\u4e3b\u52a8\u8bf7\u6c42) \u63a5\u5230 inv \u6d88\u606f\u540e\uff0c\u610f\u8bc6\u5230\u81ea\u5df1\u7684 headers \u4e0d\u591f\u65b0 (\u88ab\u52a8) Note \u63a5\u5230 getheaders \u8bf7\u6c42\u7684\u8282\u70b9\uff0c\u4f1a\u4ee5 headers \u6d88\u606f\u5e94\u7b54\uff0c\u6700\u591a 2000 \u4e2a header \u8bf7\u6c42\u7aef\u5982\u679c\u5f97\u5230\u7684\u5e94\u7b54 (headers \u6d88\u606f) \u5305\u542b 2000 \u4e2a header\uff0c\u610f\u5473\u7740 \u5e94\u7b54\u7aef\u53ef\u80fd\u62e5\u6709\u66f4\u591a\u7684 header\uff0c\u9700\u8981\u518d\u6b21\u83b7\u53d6 (\u5faa\u73af\u83b7\u53d6) \u5982\u679c\u8282\u70b9\u5728\u521d\u59cb\u5316\u4e2d\uff0c\u4f1a\u5ffd\u7565 getheaders \u6d88\u606f\uff0c\u56e0\u4e3a\u6ca1\u6709\u80fd\u529b\u5904\u7406 1.3.2 \u88ab\u52a8\u83b7\u53d6\u65b0 Block \u00b6 sequenceDiagram participant l as Local participant p as Peer p ->> l: 1: inv(msg_block) l ->> p: 2: getHeaders p -->> l: 3: headers l ->> p: 4: getData p -->> l: 5: blocks 1.3.2.1 \u8fc7\u7a0b\u63cf\u8ff0 \u00b6 Peer \u8282\u70b9\u6316\u51fa\u4e86\u65b0 block\uff0c\u6216\u8005\u63a5\u53d7\u4e86\u65b0 block (\u53ef\u80fd\u662f\u591a\u4e2a)\uff0c\u53d1\u51fa inv(MSG_BLOCK) \u6d88\u606f Local \u8282\u70b9\u63a5\u6536\u5230 inv(MSG_BLOCK) \u6d88\u606f\uff0c\u53d6\u51fa\u4e86\u91cc\u9762\u7684 header hash \u5217\u8868\uff0c\u5728\u672c\u5730\u8fdb\u884c\u5bf9\u6bd4\uff0c\u627e\u51fa\u672c\u5730\u6ca1\u6709\u7684 header hash \u5217\u8868\uff0c\u53d1\u51fa getheaders \u6d88\u606f\uff0c\u901a\u8fc7 hash_start, hash_stop \u8868\u660e\u8303\u56f4\uff0c\u6700\u591a 2000 \u6761\uff0c\u5982\u679c\u8981\u5c3d\u53ef\u80fd\u591a\u7684\u83b7\u53d6\uff0chash_stop \u8bbe\u4e3a 0 Peer \u8282\u70b9\u63a5\u5230 getheaders \u7684\u6d88\u606f\uff0c\u6309\u8981\u6c42\u67e5\u51fa\u6765\u672c\u5730\u7684 header \u5217\u8868 (\u4e0d\u53ea\u662f hash\uff0c\u662f\u5b8c\u6574\u7684 block header \u4fe1\u606f)\uff0c\u6700\u591a 2000 \u6761\uff0c\u53d1\u9001\u7ed9 Local \u8282\u70b9 Local \u8282\u70b9\u63a5\u5230 headers \u6d88\u606f\u540e\uff0c\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5982\u679c headers \u4e0d\u8fde\u7eed\uff0c\u5219\u8ba4\u4e3a Peer \u8282\u70b9\u6076\u610f\u6363\u4e71\uff0c\u4f1a\u505a\u6807\u8bb0\u3002\u7136\u540e\u8fdb\u884c POW \u9a8c\u8bc1\uff0c\u5305\u62ec hash \u96be\u5ea6\u662f\u4e0d\u662f\u5728\u589e\u52a0\u3002\u901a\u8fc7\u9a8c\u8bc1\u7684 header hash \u4fe1\u606f\u4f1a\u5199\u5165 levelDB\uff0c\u5176\u4f59\u4fe1\u606f\u5728\u5185\u5b58\u4e2d\u4fdd\u7559 (\u6b64\u5904\u8fd8\u9700\u786e\u8ba4)\uff0c\u5982\u679c Peer \u7aef\u8fd4\u56de\u7684 headers \u8fbe\u5230\u4e86\u6700\u9ad8\u503c 2000 \u6761\uff0c\u5219\u7ee7\u7eed\u83b7\u53d6 (\u5faa\u73af\u83b7\u53d6) Local \u8282\u70b9\u6839\u636e\u5df2\u786e\u8ba4\u7684 header \u5217\u8868\uff0c\u53d1\u51fa getdata \u6d88\u606f\uff0c\u5305\u542b\u4e00\u4e2a\u5411\u91cf\u6e05\u5355 Peer \u8282\u70b9\u6536\u5230 getdata \u6d88\u606f\u540e\uff0c\u4f1a\u6309\u8981\u6c42\u4ece\u78c1\u76d8\u8bfb\u53d6 block \u5217\u8868\uff0c\u53d1\u9001 block \u6d88\u606f\u7ed9 Local \u8282\u70b9\uff0c\u8fd9\u91cc\u4f3c\u4e4e block \u6d88\u606f\u6bcf\u6b21\u53ea\u53d1\u9001\u4e00\u4e2a block Local \u8282\u70b9\u6536\u5230 block \u6d88\u606f\u540e\uff0c\u8fdb\u884c merkle_tree \u7b49\u4e00\u7cfb\u5217\u9a8c\u8bc1\uff0c\u901a\u8fc7\u9a8c\u8bc1\u7684 block \u8bb2\u5199\u5165\u78c1\u76d8 1.3.3 \u4e3b\u52a8\u83b7\u53d6\u65b0 Block \u00b6 sequenceDiagram participant l as Local participant p as Peer l -> p: 2: getHeaders p --> l: 3: headers l -> p: 4: getData p --> l: 5: blocks 1.3.3.1 \u8fc7\u7a0b\u63cf\u8ff0 \u00b6","title":"\u540c\u6b65"},{"location":"bitcoin/sync/#13","text":"","title":"1.3 \u540c\u6b65"},{"location":"bitcoin/sync/#131","text":"","title":"1.3.1 \u540c\u6b65\u573a\u666f"},{"location":"bitcoin/sync/#1311","text":"\u4e00\u4e2a\u8282\u70b9\u6536\u5230\u8fde\u63a5\u8bf7\u6c42\u65f6\uff0c\u5b83\u7acb\u5373\u5ba3\u544a\u5176\u7248\u672c\uff0c\u53d1\u9001 version \u6d88\u606f\u3002\u5728\u901a\u4fe1\u53cc\u65b9\u90fd\u5f97\u5230\u5bf9\u65b9\u7248\u672c\u4e4b\u524d\uff0c\u4e0d\u4f1a\u6709\u5176\u4ed6\u901a\u4fe1 \u7248\u672c\u4e0d\u4f4e\u4e8e209\u7684\u5ba2\u6237\u7aef\u5728\u5e94\u7b54version\u6d88\u606f\u65f6\u53d1\u9001 verack \u6d88\u606f Note \u76f8\u540c\u7684 \u7248\u672c \u610f\u5473\u7740\u76f8\u540c\u7684\u7a0b\u5e8f","title":"1.3.1.1 \u5efa\u7acb\u8fde\u63a5"},{"location":"bitcoin/sync/#1312-invmsg_block","text":"\u6316\u5230\u65b0\u7684 block \u4ece\u5176\u4ed6\u8282\u70b9\u83b7\u53d6\u5230\u65b0\u7684 block\uff0c\u5373 \u63a5\u6536\u5230 cmpctblock \uff0c blocktxn , block \u8fd9\u4e09\u4e2a\u6d88\u606f\uff0c\u5e76\u786e\u8ba4\u4e4b\u540e \u5e94\u7b54 getblocks \u6d88\u606f Note \u5e94\u7b54 getblocks \u6d88\u606f\u65f6\uff0c\u53ea\u53d1\u9001 inv \u6d88\u606f\uff0c\u8ba9\u8bf7\u6c42\u7aef\u81ea\u5df1\u8fdb\u884c\u5bf9\u6bd4\u7b5b\u9009\uff0c\u6709\u786e\u5b9a\u9700\u8981\u7684 block \u65f6\uff0c\u8bf7\u6c42\u7aef\u4f1a\u53d1\u9001 getdata \u6765\u83b7\u53d6\u5b9e\u9645\u7684 block \u7684\u5168\u90e8\u4fe1\u606f","title":"1.3.1.2 INV(MSG_BLOCK) \u7684\u53d1\u9001"},{"location":"bitcoin/sync/#1313-getheaders","text":"\u65b0\u8282\u70b9 (\u4e3b\u52a8\u8bf7\u6c42) \u63a5\u5230 inv \u6d88\u606f\u540e\uff0c\u610f\u8bc6\u5230\u81ea\u5df1\u7684 headers \u4e0d\u591f\u65b0 (\u88ab\u52a8) Note \u63a5\u5230 getheaders \u8bf7\u6c42\u7684\u8282\u70b9\uff0c\u4f1a\u4ee5 headers \u6d88\u606f\u5e94\u7b54\uff0c\u6700\u591a 2000 \u4e2a header \u8bf7\u6c42\u7aef\u5982\u679c\u5f97\u5230\u7684\u5e94\u7b54 (headers \u6d88\u606f) \u5305\u542b 2000 \u4e2a header\uff0c\u610f\u5473\u7740 \u5e94\u7b54\u7aef\u53ef\u80fd\u62e5\u6709\u66f4\u591a\u7684 header\uff0c\u9700\u8981\u518d\u6b21\u83b7\u53d6 (\u5faa\u73af\u83b7\u53d6) \u5982\u679c\u8282\u70b9\u5728\u521d\u59cb\u5316\u4e2d\uff0c\u4f1a\u5ffd\u7565 getheaders \u6d88\u606f\uff0c\u56e0\u4e3a\u6ca1\u6709\u80fd\u529b\u5904\u7406","title":"1.3.1.3 \bgetheaders \u7684\u53d1\u9001"},{"location":"bitcoin/sync/#132-block","text":"sequenceDiagram participant l as Local participant p as Peer p ->> l: 1: inv(msg_block) l ->> p: 2: getHeaders p -->> l: 3: headers l ->> p: 4: getData p -->> l: 5: blocks","title":"1.3.2 \u88ab\u52a8\u83b7\u53d6\u65b0 Block"},{"location":"bitcoin/sync/#1321","text":"Peer \u8282\u70b9\u6316\u51fa\u4e86\u65b0 block\uff0c\u6216\u8005\u63a5\u53d7\u4e86\u65b0 block (\u53ef\u80fd\u662f\u591a\u4e2a)\uff0c\u53d1\u51fa inv(MSG_BLOCK) \u6d88\u606f Local \u8282\u70b9\u63a5\u6536\u5230 inv(MSG_BLOCK) \u6d88\u606f\uff0c\u53d6\u51fa\u4e86\u91cc\u9762\u7684 header hash \u5217\u8868\uff0c\u5728\u672c\u5730\u8fdb\u884c\u5bf9\u6bd4\uff0c\u627e\u51fa\u672c\u5730\u6ca1\u6709\u7684 header hash \u5217\u8868\uff0c\u53d1\u51fa getheaders \u6d88\u606f\uff0c\u901a\u8fc7 hash_start, hash_stop \u8868\u660e\u8303\u56f4\uff0c\u6700\u591a 2000 \u6761\uff0c\u5982\u679c\u8981\u5c3d\u53ef\u80fd\u591a\u7684\u83b7\u53d6\uff0chash_stop \u8bbe\u4e3a 0 Peer \u8282\u70b9\u63a5\u5230 getheaders \u7684\u6d88\u606f\uff0c\u6309\u8981\u6c42\u67e5\u51fa\u6765\u672c\u5730\u7684 header \u5217\u8868 (\u4e0d\u53ea\u662f hash\uff0c\u662f\u5b8c\u6574\u7684 block header \u4fe1\u606f)\uff0c\u6700\u591a 2000 \u6761\uff0c\u53d1\u9001\u7ed9 Local \u8282\u70b9 Local \u8282\u70b9\u63a5\u5230 headers \u6d88\u606f\u540e\uff0c\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5982\u679c headers \u4e0d\u8fde\u7eed\uff0c\u5219\u8ba4\u4e3a Peer \u8282\u70b9\u6076\u610f\u6363\u4e71\uff0c\u4f1a\u505a\u6807\u8bb0\u3002\u7136\u540e\u8fdb\u884c POW \u9a8c\u8bc1\uff0c\u5305\u62ec hash \u96be\u5ea6\u662f\u4e0d\u662f\u5728\u589e\u52a0\u3002\u901a\u8fc7\u9a8c\u8bc1\u7684 header hash \u4fe1\u606f\u4f1a\u5199\u5165 levelDB\uff0c\u5176\u4f59\u4fe1\u606f\u5728\u5185\u5b58\u4e2d\u4fdd\u7559 (\u6b64\u5904\u8fd8\u9700\u786e\u8ba4)\uff0c\u5982\u679c Peer \u7aef\u8fd4\u56de\u7684 headers \u8fbe\u5230\u4e86\u6700\u9ad8\u503c 2000 \u6761\uff0c\u5219\u7ee7\u7eed\u83b7\u53d6 (\u5faa\u73af\u83b7\u53d6) Local \u8282\u70b9\u6839\u636e\u5df2\u786e\u8ba4\u7684 header \u5217\u8868\uff0c\u53d1\u51fa getdata \u6d88\u606f\uff0c\u5305\u542b\u4e00\u4e2a\u5411\u91cf\u6e05\u5355 Peer \u8282\u70b9\u6536\u5230 getdata \u6d88\u606f\u540e\uff0c\u4f1a\u6309\u8981\u6c42\u4ece\u78c1\u76d8\u8bfb\u53d6 block \u5217\u8868\uff0c\u53d1\u9001 block \u6d88\u606f\u7ed9 Local \u8282\u70b9\uff0c\u8fd9\u91cc\u4f3c\u4e4e block \u6d88\u606f\u6bcf\u6b21\u53ea\u53d1\u9001\u4e00\u4e2a block Local \u8282\u70b9\u6536\u5230 block \u6d88\u606f\u540e\uff0c\u8fdb\u884c merkle_tree \u7b49\u4e00\u7cfb\u5217\u9a8c\u8bc1\uff0c\u901a\u8fc7\u9a8c\u8bc1\u7684 block \u8bb2\u5199\u5165\u78c1\u76d8","title":"1.3.2.1 \u8fc7\u7a0b\u63cf\u8ff0"},{"location":"bitcoin/sync/#133-block","text":"sequenceDiagram participant l as Local participant p as Peer l -> p: 2: getHeaders p --> l: 3: headers l -> p: 4: getData p --> l: 5: blocks","title":"1.3.3 \u4e3b\u52a8\u83b7\u53d6\u65b0 Block"},{"location":"bitcoin/sync/#1331","text":"","title":"1.3.3.1 \u8fc7\u7a0b\u63cf\u8ff0"},{"location":"eos/structure/","text":"EOS \u6570\u636e\u7ed3\u6784 \u00b6 \u5b57\u6bb5 \u8bf4\u660e timestamp \u65f6\u95f4\u6233 producer \u751f\u4ea7\u8005 confirmed \u751f\u4ea7\u8005\u786e\u8ba4\u6570 previous \u94fe\u5f0f\u7ed3\u6784\u524d\u4e00\u4e2a\u533a\u5757\u7684id transaction_mroot \u4ea4\u6613\u9ed8\u514b\u5c14\u6811\u6839 action_mroot \u52a8\u4f5c\u9ed8\u514b\u5c14\u6811\u6839 schedule_version \u751f\u4ea7\u8005\u7248\u672c\u6392\u5e8f\u53f7 new_producers \u4e0b\u4e00\u4e2a\u751f\u4ea7\u8005 header_extensions \u533a\u5757\u5934\u6269\u5c55\u5b57\u6bb5 producer_signature \u533a\u5757\u7b7e\u540d\uff0c\u7531\u751f\u4ea7\u8005\u7b7e\u540d transactions \u5757\u6253\u5305\u4ea4\u6613\u5185\u5bb9\uff0c\u662f\u6570\u7ec4\u7ed3\u6784\uff0c\u53ef\u4ee5\u591a\u4e2a block_extensions \u533a\u5757\u6269\u5c55\u5b57\u6bb5 id \u5f53\u524d\u5757id block_num \u5f53\u524d\u5757\u9ad8\u5ea6 ref_block_prefix \u5f15\u7528\u533a\u5757\u7684\u533a\u5757\u5934","title":"\u7ed3\u6784"},{"location":"eos/structure/#eos","text":"\u5b57\u6bb5 \u8bf4\u660e timestamp \u65f6\u95f4\u6233 producer \u751f\u4ea7\u8005 confirmed \u751f\u4ea7\u8005\u786e\u8ba4\u6570 previous \u94fe\u5f0f\u7ed3\u6784\u524d\u4e00\u4e2a\u533a\u5757\u7684id transaction_mroot \u4ea4\u6613\u9ed8\u514b\u5c14\u6811\u6839 action_mroot \u52a8\u4f5c\u9ed8\u514b\u5c14\u6811\u6839 schedule_version \u751f\u4ea7\u8005\u7248\u672c\u6392\u5e8f\u53f7 new_producers \u4e0b\u4e00\u4e2a\u751f\u4ea7\u8005 header_extensions \u533a\u5757\u5934\u6269\u5c55\u5b57\u6bb5 producer_signature \u533a\u5757\u7b7e\u540d\uff0c\u7531\u751f\u4ea7\u8005\u7b7e\u540d transactions \u5757\u6253\u5305\u4ea4\u6613\u5185\u5bb9\uff0c\u662f\u6570\u7ec4\u7ed3\u6784\uff0c\u53ef\u4ee5\u591a\u4e2a block_extensions \u533a\u5757\u6269\u5c55\u5b57\u6bb5 id \u5f53\u524d\u5757id block_num \u5f53\u524d\u5757\u9ad8\u5ea6 ref_block_prefix \u5f15\u7528\u533a\u5757\u7684\u533a\u5757\u5934","title":"EOS \u6570\u636e\u7ed3\u6784"},{"location":"ethereum/QA/","text":"Q & A \u00b6 \u53d4\u5757 \u53d4\u5757\u672c\u8eab\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u5757\uff0c\u5b83\u53ea\u662f \"\u6162\" \u4e86\u4e00\u4e9b \u53d4\u5757\u5185\u90e8\u7684\u4ea4\u6613\u4e0d\u4f1a\u88ab\u6267\u884c \u53d4\u5757\u53ea\u80fd\u88ab\u5305\u542b 1 \u6b21 \b\b\u88ab\u6253\u5305\u7684\u662f\u53d4\u5757\u7684 header (\u53ea\u662f\u8ba4\u53ef\u4e86\u5757\u7684\u8eab\u4efd\uff0c\b\u5e76\u4e0d\u6267\u884c\u4ea4\u6613) \u53ea\u80fd\u6253\u5305 0 - 2 \u4e2a\u53d4\u5757 \u6253\u5305\u53d4\u5757\u7684\u77ff\u5de5\u53ef\u4ee5\u5f97\u5230 1/32 \u7684\u5757\u7684\u6807\u51c6\u5956\u52b1 \u6316\u51fa\u53d4\u5757\u7684\u77ff\u5de5\u6309\u95f4\u9694\u5c42\u6570\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u8868\u683c\u4e2d\u7684\u5956\u52b1 \u95f4\u9694\u5c42\u6570 \u62a5\u916c\u6bd4\u4f8b \u62a5\u916c(Eth) 1 7/8 2.625 2 6/8 2.25 3 5/8 1.875 4 4/8 1.5 5 3/8 1.125 6 2/8 0.75 RLP \u7684\u4f18\u7f3a\u70b9 RLP \u7f16\u7801\u5b9a\u4e49 \u7c7b\u578b \u9996\u5b57\u8282\u8303\u56f4 \u7f16\u7801\u5185\u5bb9 [0x00, 0x7f]\u7684\u5355\u4e2a\u5b57\u8282 [0x00, 0x7f] \u5b57\u8282\u5185\u5bb9\u672c\u8eab 0-55 \u5b57\u8282\u957f\u7684\u5b57\u7b26\u4e32 [0x80, 0xb7] 0x80\u52a0\u4e0a\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u540e\u8ddf\u5b57\u7b26\u4e32\u4e8c\u8fdb\u5236\u5185\u5bb9 \u8d85\u8fc755\u4e2a\u5b57\u8282\u7684\u5b57\u7b26\u4e32 [0xb8, 0xbf] 0xb7\u52a0\u4e0a\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u957f\u5ea6\uff0c\u540e\u8ddf\u5b57\u7b26\u4e32\u4e8c\u8fdb\u5236\u5185\u5bb9 0-55\u4e2a\u5b57\u8282\u957f\u7684\u5217\u8868\uff08\u6240\u6709\u9879\u7684\u7ec4\u5408\u957f\u5ea6\uff09 [0xc0, 0xf7] 0xc0\u52a0\u4e0a\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u4e32\u8054\u8d77\u6765\u7684\u957f\u5ea6\u5f97\u5230\u7684\u5355\u4e2a\u5b57\u8282\uff0c\u540e\u8ddf\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u7684\u4e32\u8054\u7ec4\u6210\u3002 \u5217\u8868\u7684\u5185\u5bb9\u8d85\u8fc755\u5b57\u8282 [0xf8, 0xff] 0xC0\u52a0\u4e0a\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u4e32\u8054\u8d77\u6765\u7684\u957f\u5ea6\u7684\u957f\u5ea6\u5f97\u5230\u7684\u5355\u4e2a\u5b57\u8282\uff0c\u540e\u8ddf\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u4e32\u8054\u8d77\u6765\u7684\u957f\u5ea6\u7684\u957f\u5ea6\uff0c\u518d\u540e\u8ddf\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u7684\u4e32\u8054\u7ec4\u6210 \u4f18\u70b9: \u5b58\u50a8\u7a7a\u95f4\u5c0f \u6613\u4e8e\u5b9e\u73b0 \u7f3a\u70b9: \u4e0e json \u76f8\u6bd4\uff0cRLP \u6ca1\u6709\u7ed3\u6784\uff0c\u6bd4\u5982\u5b58\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u6bb5\uff0c\u53ea\u6709\u503c\uff0c\u5e76\u4e0d\u80fd\u5224\u65ad\u662f \"Name\" \u8fd8\u662f \"Address\"\uff0c\u8fd9\u5c31\u9700\u8981\u89e3\u6790\u65b9\uff0c\u660e\u786e\u77e5\u9053\u6570\u636e\u7684\u7ed3\u6784","title":"QA"},{"location":"ethereum/QA/#q-a","text":"\u53d4\u5757 \u53d4\u5757\u672c\u8eab\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u5757\uff0c\u5b83\u53ea\u662f \"\u6162\" \u4e86\u4e00\u4e9b \u53d4\u5757\u5185\u90e8\u7684\u4ea4\u6613\u4e0d\u4f1a\u88ab\u6267\u884c \u53d4\u5757\u53ea\u80fd\u88ab\u5305\u542b 1 \u6b21 \b\b\u88ab\u6253\u5305\u7684\u662f\u53d4\u5757\u7684 header (\u53ea\u662f\u8ba4\u53ef\u4e86\u5757\u7684\u8eab\u4efd\uff0c\b\u5e76\u4e0d\u6267\u884c\u4ea4\u6613) \u53ea\u80fd\u6253\u5305 0 - 2 \u4e2a\u53d4\u5757 \u6253\u5305\u53d4\u5757\u7684\u77ff\u5de5\u53ef\u4ee5\u5f97\u5230 1/32 \u7684\u5757\u7684\u6807\u51c6\u5956\u52b1 \u6316\u51fa\u53d4\u5757\u7684\u77ff\u5de5\u6309\u95f4\u9694\u5c42\u6570\u53ef\u4ee5\u5f97\u5230\u4e0b\u9762\u8868\u683c\u4e2d\u7684\u5956\u52b1 \u95f4\u9694\u5c42\u6570 \u62a5\u916c\u6bd4\u4f8b \u62a5\u916c(Eth) 1 7/8 2.625 2 6/8 2.25 3 5/8 1.875 4 4/8 1.5 5 3/8 1.125 6 2/8 0.75 RLP \u7684\u4f18\u7f3a\u70b9 RLP \u7f16\u7801\u5b9a\u4e49 \u7c7b\u578b \u9996\u5b57\u8282\u8303\u56f4 \u7f16\u7801\u5185\u5bb9 [0x00, 0x7f]\u7684\u5355\u4e2a\u5b57\u8282 [0x00, 0x7f] \u5b57\u8282\u5185\u5bb9\u672c\u8eab 0-55 \u5b57\u8282\u957f\u7684\u5b57\u7b26\u4e32 [0x80, 0xb7] 0x80\u52a0\u4e0a\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u540e\u8ddf\u5b57\u7b26\u4e32\u4e8c\u8fdb\u5236\u5185\u5bb9 \u8d85\u8fc755\u4e2a\u5b57\u8282\u7684\u5b57\u7b26\u4e32 [0xb8, 0xbf] 0xb7\u52a0\u4e0a\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u957f\u5ea6\uff0c\u540e\u8ddf\u5b57\u7b26\u4e32\u4e8c\u8fdb\u5236\u5185\u5bb9 0-55\u4e2a\u5b57\u8282\u957f\u7684\u5217\u8868\uff08\u6240\u6709\u9879\u7684\u7ec4\u5408\u957f\u5ea6\uff09 [0xc0, 0xf7] 0xc0\u52a0\u4e0a\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u4e32\u8054\u8d77\u6765\u7684\u957f\u5ea6\u5f97\u5230\u7684\u5355\u4e2a\u5b57\u8282\uff0c\u540e\u8ddf\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u7684\u4e32\u8054\u7ec4\u6210\u3002 \u5217\u8868\u7684\u5185\u5bb9\u8d85\u8fc755\u5b57\u8282 [0xf8, 0xff] 0xC0\u52a0\u4e0a\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u4e32\u8054\u8d77\u6765\u7684\u957f\u5ea6\u7684\u957f\u5ea6\u5f97\u5230\u7684\u5355\u4e2a\u5b57\u8282\uff0c\u540e\u8ddf\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u4e32\u8054\u8d77\u6765\u7684\u957f\u5ea6\u7684\u957f\u5ea6\uff0c\u518d\u540e\u8ddf\u6240\u6709\u7684\u9879\u7684RLP\u7f16\u7801\u7684\u4e32\u8054\u7ec4\u6210 \u4f18\u70b9: \u5b58\u50a8\u7a7a\u95f4\u5c0f \u6613\u4e8e\u5b9e\u73b0 \u7f3a\u70b9: \u4e0e json \u76f8\u6bd4\uff0cRLP \u6ca1\u6709\u7ed3\u6784\uff0c\u6bd4\u5982\u5b58\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u5b57\u6bb5\uff0c\u53ea\u6709\u503c\uff0c\u5e76\u4e0d\u80fd\u5224\u65ad\u662f \"Name\" \u8fd8\u662f \"Address\"\uff0c\u8fd9\u5c31\u9700\u8981\u89e3\u6790\u65b9\uff0c\u660e\u786e\u77e5\u9053\u6570\u636e\u7684\u7ed3\u6784","title":"Q &amp; A"},{"location":"ethereum/protocal/","text":"\u4ee5\u592a\u574a\u534f\u8bae \u00b6 1 Msg \u00b6 type Msg struct { Code uint64 Size uint32 // size of the paylod Payload io . Reader ReceivedAt time . Time } const ( // Protocol messages belonging to eth/62 StatusMsg = 0x00 NewBlockHashesMsg = 0x01 TxMsg = 0x02 GetBlockHeadersMsg = 0x03 BlockHeadersMsg = 0x04 GetBlockBodiesMsg = 0x05 BlockBodiesMsg = 0x06 NewBlockMsg = 0x07 // Protocol messages belonging to eth/63 GetNodeDataMsg = 0x0d NodeDataMsg = 0x0e GetReceiptsMsg = 0x0f ReceiptsMsg = 0x10 ) Code \u76f8\u5f53\u4e8e \u6bd4\u7279\u5e01 \u7684 \"command\"\uff0c\u4f46\u662f\u660e\u663e \"Code\" \u7684\u53ef\u6269\u5c55\u6027\u8981\u597d\u7684\u591a\uff0c\u4f46\u662f\u8981\u6c42\u5fc5\u987b\u90fd\u7ea6\u5b9a\u597d\u6bcf\u4e2a\u6570\u5b57\u5bf9\u5e94\u7684\u547d\u4ee4\u662f\u4ec0\u4e48 2 GetBlockHeaders \u00b6 type getBlockHeadersData struct { Origin hashOrNumber // Block from which to retrieve headers Amount uint64 // Maximum number of headers to retrieve Skip uint64 // Blocks to skip between consecutive headers Reverse bool // Query direction (false = rising towards latest, true = falling towards genesis) } // hashOrNumber is a combined field for specifying an origin block. type hashOrNumber struct { Hash common . Hash // Block hash from which to retrieve headers (excludes Number) Number uint64 // Block hash from which to retrieve headers (excludes Hash) } 3 BlockHeadersMsg \u00b6 Header \u6570\u7ec4 type Header struct { ParentHash common . Hash `json:\"parentHash\" gencodec:\"required\"` UncleHash common . Hash `json:\"sha3Uncles\" gencodec:\"required\"` Coinbase common . Address `json:\"miner\" gencodec:\"required\"` Root common . Hash `json:\"stateRoot\" gencodec:\"required\"` TxHash common . Hash `json:\"transactionsRoot\" gencodec:\"required\"` ReceiptHash common . Hash `json:\"receiptsRoot\" gencodec:\"required\"` Bloom Bloom `json:\"logsBloom\" gencodec:\"required\"` Difficulty * big . Int `json:\"difficulty\" gencodec:\"required\"` Number * big . Int `json:\"number\" gencodec:\"required\"` GasLimit uint64 `json:\"gasLimit\" gencodec:\"required\"` GasUsed uint64 `json:\"gasUsed\" gencodec:\"required\"` Time * big . Int `json:\"timestamp\" gencodec:\"required\"` Extra [] byte `json:\"extraData\" gencodec:\"required\"` MixDigest common . Hash `json:\"mixHash\" gencodec:\"required\"` Nonce BlockNonce `json:\"nonce\" gencodec:\"required\"` } 4 GetBlockBodiesMsg \u00b6 Hash\b (32 bytes) \u6570\u7ec4 5 BlockBodiesMsg \u00b6 // blockBodiesData is the network packet for block content distribution. type blockBodiesData [] * blockBody // blockBody represents the data content of a single block. type blockBody struct { Transactions [] * types . Transaction // Transactions contained within a block Uncles [] * types . Header // Uncles contained within a block } type Transaction struct { data txdata // caches hash atomic . Value size atomic . Value from atomic . Value } type txdata struct { AccountNonce uint64 `json:\"nonce\" gencodec:\"required\"` Price * big . Int `json:\"gasPrice\" gencodec:\"required\"` GasLimit uint64 `json:\"gas\" gencodec:\"required\"` Recipient * common . Address `json:\"to\" rlp:\"nil\"` // nil means contract creation Amount * big . Int `json:\"value\" gencodec:\"required\"` Payload [] byte `json:\"input\" gencodec:\"required\"` // Signature values V * big . Int `json:\"v\" gencodec:\"required\"` R * big . Int `json:\"r\" gencodec:\"required\"` S * big . Int `json:\"s\" gencodec:\"required\"` // This is only used when marshaling to JSON. Hash * common . Hash `json:\"hash\" rlp:\"-\"` } 6 GetNodeDataMsg \u00b6 Hash \u6570\u7ec4 7 NodeDataMsg \u00b6 byte 2 \u7ef4\u6570\u7ec4 8 GetReceiptsMsg \u00b6 Hash \u6570\u7ec4 9 ReceiptsMsg \u00b6 // Receipt represents the results of a transaction. type Receipt struct { // Consensus fields PostState [] byte `json:\"root\"` Status uint64 `json:\"status\"` CumulativeGasUsed uint64 `json:\"cumulativeGasUsed\" gencodec:\"required\"` Bloom Bloom `json:\"logsBloom\" gencodec:\"required\"` // 256 bytes Logs [] * Log `json:\"logs\" gencodec:\"required\"` // Implementation fields (don't reorder!) TxHash common . Hash `json:\"transactionHash\" gencodec:\"required\"` ContractAddress common . Address `json:\"contractAddress\"` // 20 bytes GasUsed uint64 `json:\"gasUsed\" gencodec:\"required\"` } // Log represents a contract log event. These events are generated by the LOG opcode and // stored/indexed by the node. type Log struct { // Consensus fields: // address of the contract that generated the event Address common . Address `json:\"address\" gencodec:\"required\"` // list of topics provided by the contract. Topics [] common . Hash `json:\"topics\" gencodec:\"required\"` // supplied by the contract, usually ABI-encoded Data [] byte `json:\"data\" gencodec:\"required\"` // Derived fields. These fields are filled in by the node // but not secured by consensus. // block in which the transaction was included BlockNumber uint64 `json:\"blockNumber\"` // hash of the transaction TxHash common . Hash `json:\"transactionHash\" gencodec:\"required\"` // index of the transaction in the block TxIndex uint `json:\"transactionIndex\" gencodec:\"required\"` // hash of the block in which the transaction was included BlockHash common . Hash `json:\"blockHash\"` // index of the log in the block Index uint `json:\"logIndex\" gencodec:\"required\"` // The Removed field is true if this log was reverted due to a chain reorganisation. // You must pay attention to this field if you receive logs through a filter query. Removed bool `json:\"removed\"` } 10 NewBlockHashesMsg \u00b6 // newBlockHashesData is the network packet for the block announcements. type newBlockHashesData [] struct { Hash common . Hash // Hash of one particular block being announced Number uint64 // Number of one particular block being announced } 11 NewBlockMsg \u00b6 type newBlockData struct { Block * types . Block TD * big . Int } // Block represents an entire block in the Ethereum blockchain. type Block struct { header * Header uncles [] * Header transactions Transactions // caches hash atomic . Value size atomic . Value // Td is used by package core to store the total difficulty // of the chain up to and including the block. td * big . Int // These fields are used by package eth to track // inter-peer block relay. ReceivedAt time . Time ReceivedFrom interface {} } 12 TxMsg \u00b6 Transaction \u6570\u7ec4","title":"\u901a\u4fe1\u534f\u8bae"},{"location":"ethereum/protocal/#_1","text":"","title":"\u4ee5\u592a\u574a\u534f\u8bae"},{"location":"ethereum/protocal/#1-msg","text":"type Msg struct { Code uint64 Size uint32 // size of the paylod Payload io . Reader ReceivedAt time . Time } const ( // Protocol messages belonging to eth/62 StatusMsg = 0x00 NewBlockHashesMsg = 0x01 TxMsg = 0x02 GetBlockHeadersMsg = 0x03 BlockHeadersMsg = 0x04 GetBlockBodiesMsg = 0x05 BlockBodiesMsg = 0x06 NewBlockMsg = 0x07 // Protocol messages belonging to eth/63 GetNodeDataMsg = 0x0d NodeDataMsg = 0x0e GetReceiptsMsg = 0x0f ReceiptsMsg = 0x10 ) Code \u76f8\u5f53\u4e8e \u6bd4\u7279\u5e01 \u7684 \"command\"\uff0c\u4f46\u662f\u660e\u663e \"Code\" \u7684\u53ef\u6269\u5c55\u6027\u8981\u597d\u7684\u591a\uff0c\u4f46\u662f\u8981\u6c42\u5fc5\u987b\u90fd\u7ea6\u5b9a\u597d\u6bcf\u4e2a\u6570\u5b57\u5bf9\u5e94\u7684\u547d\u4ee4\u662f\u4ec0\u4e48","title":"1 Msg"},{"location":"ethereum/protocal/#2-getblockheaders","text":"type getBlockHeadersData struct { Origin hashOrNumber // Block from which to retrieve headers Amount uint64 // Maximum number of headers to retrieve Skip uint64 // Blocks to skip between consecutive headers Reverse bool // Query direction (false = rising towards latest, true = falling towards genesis) } // hashOrNumber is a combined field for specifying an origin block. type hashOrNumber struct { Hash common . Hash // Block hash from which to retrieve headers (excludes Number) Number uint64 // Block hash from which to retrieve headers (excludes Hash) }","title":"2 GetBlockHeaders"},{"location":"ethereum/protocal/#3-blockheadersmsg","text":"Header \u6570\u7ec4 type Header struct { ParentHash common . Hash `json:\"parentHash\" gencodec:\"required\"` UncleHash common . Hash `json:\"sha3Uncles\" gencodec:\"required\"` Coinbase common . Address `json:\"miner\" gencodec:\"required\"` Root common . Hash `json:\"stateRoot\" gencodec:\"required\"` TxHash common . Hash `json:\"transactionsRoot\" gencodec:\"required\"` ReceiptHash common . Hash `json:\"receiptsRoot\" gencodec:\"required\"` Bloom Bloom `json:\"logsBloom\" gencodec:\"required\"` Difficulty * big . Int `json:\"difficulty\" gencodec:\"required\"` Number * big . Int `json:\"number\" gencodec:\"required\"` GasLimit uint64 `json:\"gasLimit\" gencodec:\"required\"` GasUsed uint64 `json:\"gasUsed\" gencodec:\"required\"` Time * big . Int `json:\"timestamp\" gencodec:\"required\"` Extra [] byte `json:\"extraData\" gencodec:\"required\"` MixDigest common . Hash `json:\"mixHash\" gencodec:\"required\"` Nonce BlockNonce `json:\"nonce\" gencodec:\"required\"` }","title":"3 BlockHeadersMsg"},{"location":"ethereum/protocal/#4-getblockbodiesmsg","text":"Hash\b (32 bytes) \u6570\u7ec4","title":"4 GetBlockBodiesMsg"},{"location":"ethereum/protocal/#5-blockbodiesmsg","text":"// blockBodiesData is the network packet for block content distribution. type blockBodiesData [] * blockBody // blockBody represents the data content of a single block. type blockBody struct { Transactions [] * types . Transaction // Transactions contained within a block Uncles [] * types . Header // Uncles contained within a block } type Transaction struct { data txdata // caches hash atomic . Value size atomic . Value from atomic . Value } type txdata struct { AccountNonce uint64 `json:\"nonce\" gencodec:\"required\"` Price * big . Int `json:\"gasPrice\" gencodec:\"required\"` GasLimit uint64 `json:\"gas\" gencodec:\"required\"` Recipient * common . Address `json:\"to\" rlp:\"nil\"` // nil means contract creation Amount * big . Int `json:\"value\" gencodec:\"required\"` Payload [] byte `json:\"input\" gencodec:\"required\"` // Signature values V * big . Int `json:\"v\" gencodec:\"required\"` R * big . Int `json:\"r\" gencodec:\"required\"` S * big . Int `json:\"s\" gencodec:\"required\"` // This is only used when marshaling to JSON. Hash * common . Hash `json:\"hash\" rlp:\"-\"` }","title":"5 BlockBodiesMsg"},{"location":"ethereum/protocal/#6-getnodedatamsg","text":"Hash \u6570\u7ec4","title":"6 GetNodeDataMsg"},{"location":"ethereum/protocal/#7-nodedatamsg","text":"byte 2 \u7ef4\u6570\u7ec4","title":"7 NodeDataMsg"},{"location":"ethereum/protocal/#8-getreceiptsmsg","text":"Hash \u6570\u7ec4","title":"8 GetReceiptsMsg"},{"location":"ethereum/protocal/#9-receiptsmsg","text":"// Receipt represents the results of a transaction. type Receipt struct { // Consensus fields PostState [] byte `json:\"root\"` Status uint64 `json:\"status\"` CumulativeGasUsed uint64 `json:\"cumulativeGasUsed\" gencodec:\"required\"` Bloom Bloom `json:\"logsBloom\" gencodec:\"required\"` // 256 bytes Logs [] * Log `json:\"logs\" gencodec:\"required\"` // Implementation fields (don't reorder!) TxHash common . Hash `json:\"transactionHash\" gencodec:\"required\"` ContractAddress common . Address `json:\"contractAddress\"` // 20 bytes GasUsed uint64 `json:\"gasUsed\" gencodec:\"required\"` } // Log represents a contract log event. These events are generated by the LOG opcode and // stored/indexed by the node. type Log struct { // Consensus fields: // address of the contract that generated the event Address common . Address `json:\"address\" gencodec:\"required\"` // list of topics provided by the contract. Topics [] common . Hash `json:\"topics\" gencodec:\"required\"` // supplied by the contract, usually ABI-encoded Data [] byte `json:\"data\" gencodec:\"required\"` // Derived fields. These fields are filled in by the node // but not secured by consensus. // block in which the transaction was included BlockNumber uint64 `json:\"blockNumber\"` // hash of the transaction TxHash common . Hash `json:\"transactionHash\" gencodec:\"required\"` // index of the transaction in the block TxIndex uint `json:\"transactionIndex\" gencodec:\"required\"` // hash of the block in which the transaction was included BlockHash common . Hash `json:\"blockHash\"` // index of the log in the block Index uint `json:\"logIndex\" gencodec:\"required\"` // The Removed field is true if this log was reverted due to a chain reorganisation. // You must pay attention to this field if you receive logs through a filter query. Removed bool `json:\"removed\"` }","title":"9 ReceiptsMsg"},{"location":"ethereum/protocal/#10-newblockhashesmsg","text":"// newBlockHashesData is the network packet for the block announcements. type newBlockHashesData [] struct { Hash common . Hash // Hash of one particular block being announced Number uint64 // Number of one particular block being announced }","title":"10 NewBlockHashesMsg"},{"location":"ethereum/protocal/#11-newblockmsg","text":"type newBlockData struct { Block * types . Block TD * big . Int } // Block represents an entire block in the Ethereum blockchain. type Block struct { header * Header uncles [] * Header transactions Transactions // caches hash atomic . Value size atomic . Value // Td is used by package core to store the total difficulty // of the chain up to and including the block. td * big . Int // These fields are used by package eth to track // inter-peer block relay. ReceivedAt time . Time ReceivedFrom interface {} }","title":"11 NewBlockMsg"},{"location":"ethereum/protocal/#12-txmsg","text":"Transaction \u6570\u7ec4","title":"12 TxMsg"},{"location":"ethereum/structure/","text":"\u4ee5\u592a\u574a\u6570\u636e\u7ed3\u6784 \u00b6 1 \u4ee5\u592a\u574a\u4e2d\u7684\u5e8f\u5217\u5316\u65b9\u6cd5RLP \u00b6 RLP(Recursive Length Prefix)\u53ef\u4ee5\u5c06\u4efb\u610f\u7684\u6570\u636e\u7f16\u7801\u79f0\u4e8c\u8fdb\u5236byte\u7684\u6570\u7ec4\uff0c\u5373[]byte\u7684\u5f62\u5f0f\u3002\u540c\u65f6\u5df2\u77e5\u6570\u636e\u7684RLP\u7f16\u7801\u7ed3\u679c\uff0c\u53ef\u4ee5\u6c42\u51fa\u5176\u539f\u6765\u7684\u5f62\u5f0f 1.1 RLP \u00b6 RLR \u8bf4\u660e 1.2 \u4ee5\u592a\u574a\u4e2d\u7684SHA3\u8ba1\u7b97 \u00b6 encode(data)=SHA3(RLP(data)) 2 \u533a\u5757\u7684\u7ec4\u6210 \u00b6 2.1 \u4e09\u90e8\u5206\u7ec4\u6210 \u00b6 \u533a\u5757\u5934\uff08Block Header\uff09 \u53d4\u5757\uff08Uncle\uff09 \u4ea4\u6613\u5217\u8868\uff08tx_List\uff09 \u53d4\u5757 \u4ee5\u592a\u574a\u6bcf 10 \u51e0\u79d2\u4ea7\u751f\u4e00\u4e2a\u533a\u5757\uff0c\u8fd9\u6837\u5c31\u4f1a\u6709\u5927\u91cf\u7684 \"\u5b64\u5757\" \u5b58\u5728\u3002 \u5982\u679c \"\u5b64\u5757\" \u90fd \u4e0d\u88ab \u627f\u8ba4\uff0c\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u8ba1\u7b97\u529b\u5c0f\u7684\u8282\u70b9\u9000\u51fa\uff0c\u5bfc\u81f4\u4ee5\u592a\u574a\u8d8b\u4e8e \"\u4e2d\u5fc3\u5316\"\uff0c\u4e0d\u591f\u5b89\u5168 \"\u5b64\u5757\" \u5982\u4f55\u88ab\u627f\u8ba4\u4e3a \"\u53d4\u5757\" \u5462? \u5c31\u662f\u88ab\u4e4b\u540e\u7684 \"\u65b0\u5757\" \u5728\u6253\u5305\u7684\u65f6\u5019\uff0c\u5305\u542b\u8fdb\u53bb\uff0c\u8fd9\u6837 \"\u65b0\u5757\" \u88ab\u8ba4\u53ef\u7684\u65f6\u5019\uff0c\"\u53d4\u5757\" \u4e5f\u5f97\u5230\u4e86\u8ba4\u53ef\u3002 \"\u65b0\u5757\" \u4e3a\u4ec0\u4e48\u4f1a\u613f\u610f\u6253\u5305 \"\u53d4\u5757\" \u5462\uff0c\u56e0\u4e3a\u6709\u5956\u52b1 \"\u53d4\u5757\" \u7684\u521b\u5efa\u8005\u4e5f\u4f1a\u6709\u5956\u52b1\uff0c\u8fd9\u6837\uff0c\u7b97\u529b\u5c0f\uff0c\u7f51\u901f\u6162 \u7684\u4e00\u4e9b\u8282\u70b9\u4e5f\u4e0d\u4f1a \"\u767d\u5fd9\"\uff0c\u6574\u4e2a\u7cfb\u7edf\u66f4 \u201c\u516c\u5e73\"\uff0c\u66f4 \"\u53bb\u4e2d\u5fc3\u5316\" 2.2 \u533a\u5757\u5934\u7ed3\u6784 \u00b6 \u540d\u79f0 \u7c7b\u578b \u610f\u4e49 parentHash common.Hash \b\u7236\u533a\u5757\u7684\u54c8\u5e0c\u503c UncleHash common.Hash \u53d4\u7236\u533a\u5757\u5217\u8868\u7684\u54c8\u5e0c\u503c Coinbase common.Address \u6253\u5305\u8be5\u533a\u5757\u7684\u77ff\u5de5\u7684\u5730\u5740\uff0c\u7528\u4e8e\u63a5\u6536\u77ff\u5de5\u8d39 Root common.Hash \u72b6\u6001\u6811\u7684\u6839\u54c8\u5e0c\u503c TxHash common.Hash \u4ea4\u6613\u6811\u7684\u6839\u54c8\u5e0c\u503c ReceiptHash common.Hash \b\u6536\u636e\u6811\u7684\u6839\u54c8\u5e0c\u503c Bloom Bloom \u4ea4\u6613\u6536\u636e\u65e5\u5fd7\u7ec4\u6210\u7684Bloom\u8fc7\u6ee4\u5668 Difficuty *Big.Int \u672c\u533a\u5757\u7684\u96be\u5ea6 Number *Big.Int \u672c\u533a\u5757\u5757\u53f7\uff0c\u533a\u5757\u53f7\u4ece 0 \u5f00\u59cb\u7b97\u8d77 GasLimit uint64 \u672c\u533a\u5757\u4e2d\u6240\u6709\u4ea4\u6613\u6d88\u8017\u7684 Gas \u4e0a\u9650\uff0c\u8fd9\u4e2a\u6570\u503c \u4e0d\u7b49\u4e8e \u6240\u6709\u4ea4\u6613\u4e2d\u7684 \u001dGasLimit\u5b57\u6bb5\u7684\u548c GasUsed uint64 \u672c\u533a\u5757\u4e2d\u6240\u6709\u4ea4\u6613\u4f7f\u7528\u7684 Gas \u7684\u548c Time *Big.Int \u533a\u5757\u4ea7\u751f\u7684 unix \u65f6\u95f4\u6233\uff0c\u4e00\u822c\u662f\u6253\u5305\u533a\u5757\u7684\u65f6\u95f4\uff0c\u8fd9\u4e2a\u5b57\u6bb5\u4e0d\u662f\u51fa\u5757\u7684\u65f6\u95f4\b\u6233 Extra []byte \u533a\u5757\u7684\u9644\u52a0\u6570\u636e MixDigest common.Hash \u54c8\u5e0c\u503c\uff0c\u4e0e Nonce \u7684\u7ec4\u5408\u7528\u4e8e\u5de5\u4f5c\u91cf\u8ba1\u7b97 Nonce BlockNonce \u533a\u5757\u4ea7\u751f\u662f\u7684\u968f\u673a\u503c 2.3 MPT \u00b6 \u878d\u5408\u4e86 Merkle Tree\uff0cPatricia Tree (\u6e90\u4e8e Trie Tree) 2.3.1 4 \u79cd\u8282\u70b9 \u00b6 fullNode shorNode valueNode hashNode fullNode fullNode \u662f\u4e00\u4e2a\u53ef\u4ee5\u643a\u5e26\u591a\u4e2a\u5b50\u8282\u70b9\u7684\u7236(\u679d)\u8282\u70b9\u3002 \u5b83\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a17\u7684node\u6570\u7ec4\u6210\u5458\u53d8\u91cfChildren\uff0c\u6570\u7ec4\u4e2d\u524d16\u4e2a\u7a7a\u4f4d\u5206\u522b\u5bf9\u5e9416\u8fdb\u5236(hex)\u4e0b\u76840-9a-f\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u8282\u70b9\uff0c\u6839\u636e\u5176key\u503c16\u8fdb\u5236\u5f62\u5f0f\u4e0b\u7684\u7b2c\u4e00\u4f4d\u7684\u503c\uff0c\u5c31\u53ef\u6302\u8f7d\u5230Children\u6570\u7ec4\u7684\u67d0\u4e2a\u4f4d\u7f6e\u3002 fullNode\u672c\u8eab\u4e0d\u518d\u9700\u8981\u989d\u5916key\u53d8\u91cf\u3002 Children\u6570\u7ec4\u7684\u7b2c17\u4f4d\uff0c\u7559\u7ed9\u8be5fullNode\u7684\u6570\u636e\u90e8\u5206\u3002 fullNode\u660e\u663e\u7ee7\u627f\u4e86\u539f\u751ftrie\u7684\u7279\u70b9\uff0c\u800c\u6bcf\u4e2a\u7236\u8282\u70b9\u6700\u591a\u62e5\u670916\u4e2a\u5206\u652f\u4e5f\u5305\u542b\u4e86\u57fa\u4e8e\u603b\u4f53\u6548\u7387\u7684\u8003\u91cf shorNode shortNode \u662f\u4e00\u4e2a\u4ec5\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u7236(\u679d)\u8282\u70b9\u3002 \u5b83\u7684\u6210\u5458\u53d8\u91cfVal\u6307\u5411\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u800c\u6210\u5458Key\u662f\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32(\u5b57\u8282\u6570\u7ec4[]byte)\u3002 \u663e\u7136shortNode\u7684\u8bbe\u8ba1\u4f53\u73b0\u4e86PatriciaTrie\u7684\u7279\u70b9\uff0c\u901a\u8fc7\u5408\u5e76\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u7236\u8282\u70b9\u548c\u5176\u5b50\u8282\u70b9\u6765\u7f29\u77edtrie\u7684\u6df1\u5ea6\uff0c\u7ed3\u679c\u5c31\u662f\u6709\u4e9b\u8282\u70b9\u4f1a\u6709\u957f\u5ea6\u66f4\u957f\u7684key\u3002 valueNode valueNode \u5145\u5f53MPT\u7684\u53f6\u5b50\u8282\u70b9\u3002 \u5b83\u5176\u5b9e\u662f\u5b57\u8282\u6570\u7ec4[]byte\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u4e0d\u5e26\u5b50\u8282\u70b9\u3002 \u5728\u4f7f\u7528\u4e2d\uff0cvalueNode\u5c31\u662f\u6240\u643a\u5e26\u6570\u636e\u90e8\u5206\u7684RLP\u54c8\u5e0c\u503c\uff0c\u957f\u5ea632byte\uff0c\u6570\u636e\u7684RLP\u7f16\u7801\u503c\u4f5c\u4e3avalueNode\u7684\u5339\u914d\u9879\u5b58\u50a8\u5728\u6570\u636e\u5e93\u91cc\u3002 hashNode hashNode \u8ddfvalueNode\u4e00\u6837\uff0c\u4e5f\u662f\u5b57\u7b26\u6570\u7ec4[]byte\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u540c\u6837\u5b58\u653e32byte\u7684\u54c8\u5e0c\u503c\uff0c\u4e5f\u6ca1\u6709\u5b50\u8282\u70b9\u3002 \u4e0d\u540c\u7684\u662f\uff0chashNode\u662ffullNode\u6216\u8005shortNode\u5bf9\u8c61\u7684RLP\u54c8\u5e0c\u503c\uff0c\u6240\u4ee5\u5b83\u8ddfvalueNode\u5728\u4f7f\u7528\u4e0a\u6709\u7740\u83ab\u5927\u7684\u4e0d\u540c\u3002","title":"\u7ed3\u6784"},{"location":"ethereum/structure/#_1","text":"","title":"\u4ee5\u592a\u574a\u6570\u636e\u7ed3\u6784"},{"location":"ethereum/structure/#1-rlp","text":"RLP(Recursive Length Prefix)\u53ef\u4ee5\u5c06\u4efb\u610f\u7684\u6570\u636e\u7f16\u7801\u79f0\u4e8c\u8fdb\u5236byte\u7684\u6570\u7ec4\uff0c\u5373[]byte\u7684\u5f62\u5f0f\u3002\u540c\u65f6\u5df2\u77e5\u6570\u636e\u7684RLP\u7f16\u7801\u7ed3\u679c\uff0c\u53ef\u4ee5\u6c42\u51fa\u5176\u539f\u6765\u7684\u5f62\u5f0f","title":"1 \u4ee5\u592a\u574a\u4e2d\u7684\u5e8f\u5217\u5316\u65b9\u6cd5RLP"},{"location":"ethereum/structure/#11-rlp","text":"RLR \u8bf4\u660e","title":"1.1 RLP"},{"location":"ethereum/structure/#12-sha3","text":"encode(data)=SHA3(RLP(data))","title":"1.2 \u4ee5\u592a\u574a\u4e2d\u7684SHA3\u8ba1\u7b97"},{"location":"ethereum/structure/#2","text":"","title":"2 \u533a\u5757\u7684\u7ec4\u6210"},{"location":"ethereum/structure/#21","text":"\u533a\u5757\u5934\uff08Block Header\uff09 \u53d4\u5757\uff08Uncle\uff09 \u4ea4\u6613\u5217\u8868\uff08tx_List\uff09 \u53d4\u5757 \u4ee5\u592a\u574a\u6bcf 10 \u51e0\u79d2\u4ea7\u751f\u4e00\u4e2a\u533a\u5757\uff0c\u8fd9\u6837\u5c31\u4f1a\u6709\u5927\u91cf\u7684 \"\u5b64\u5757\" \u5b58\u5728\u3002 \u5982\u679c \"\u5b64\u5757\" \u90fd \u4e0d\u88ab \u627f\u8ba4\uff0c\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u8ba1\u7b97\u529b\u5c0f\u7684\u8282\u70b9\u9000\u51fa\uff0c\u5bfc\u81f4\u4ee5\u592a\u574a\u8d8b\u4e8e \"\u4e2d\u5fc3\u5316\"\uff0c\u4e0d\u591f\u5b89\u5168 \"\u5b64\u5757\" \u5982\u4f55\u88ab\u627f\u8ba4\u4e3a \"\u53d4\u5757\" \u5462? \u5c31\u662f\u88ab\u4e4b\u540e\u7684 \"\u65b0\u5757\" \u5728\u6253\u5305\u7684\u65f6\u5019\uff0c\u5305\u542b\u8fdb\u53bb\uff0c\u8fd9\u6837 \"\u65b0\u5757\" \u88ab\u8ba4\u53ef\u7684\u65f6\u5019\uff0c\"\u53d4\u5757\" \u4e5f\u5f97\u5230\u4e86\u8ba4\u53ef\u3002 \"\u65b0\u5757\" \u4e3a\u4ec0\u4e48\u4f1a\u613f\u610f\u6253\u5305 \"\u53d4\u5757\" \u5462\uff0c\u56e0\u4e3a\u6709\u5956\u52b1 \"\u53d4\u5757\" \u7684\u521b\u5efa\u8005\u4e5f\u4f1a\u6709\u5956\u52b1\uff0c\u8fd9\u6837\uff0c\u7b97\u529b\u5c0f\uff0c\u7f51\u901f\u6162 \u7684\u4e00\u4e9b\u8282\u70b9\u4e5f\u4e0d\u4f1a \"\u767d\u5fd9\"\uff0c\u6574\u4e2a\u7cfb\u7edf\u66f4 \u201c\u516c\u5e73\"\uff0c\u66f4 \"\u53bb\u4e2d\u5fc3\u5316\"","title":"2.1 \u4e09\u90e8\u5206\u7ec4\u6210"},{"location":"ethereum/structure/#22","text":"\u540d\u79f0 \u7c7b\u578b \u610f\u4e49 parentHash common.Hash \b\u7236\u533a\u5757\u7684\u54c8\u5e0c\u503c UncleHash common.Hash \u53d4\u7236\u533a\u5757\u5217\u8868\u7684\u54c8\u5e0c\u503c Coinbase common.Address \u6253\u5305\u8be5\u533a\u5757\u7684\u77ff\u5de5\u7684\u5730\u5740\uff0c\u7528\u4e8e\u63a5\u6536\u77ff\u5de5\u8d39 Root common.Hash \u72b6\u6001\u6811\u7684\u6839\u54c8\u5e0c\u503c TxHash common.Hash \u4ea4\u6613\u6811\u7684\u6839\u54c8\u5e0c\u503c ReceiptHash common.Hash \b\u6536\u636e\u6811\u7684\u6839\u54c8\u5e0c\u503c Bloom Bloom \u4ea4\u6613\u6536\u636e\u65e5\u5fd7\u7ec4\u6210\u7684Bloom\u8fc7\u6ee4\u5668 Difficuty *Big.Int \u672c\u533a\u5757\u7684\u96be\u5ea6 Number *Big.Int \u672c\u533a\u5757\u5757\u53f7\uff0c\u533a\u5757\u53f7\u4ece 0 \u5f00\u59cb\u7b97\u8d77 GasLimit uint64 \u672c\u533a\u5757\u4e2d\u6240\u6709\u4ea4\u6613\u6d88\u8017\u7684 Gas \u4e0a\u9650\uff0c\u8fd9\u4e2a\u6570\u503c \u4e0d\u7b49\u4e8e \u6240\u6709\u4ea4\u6613\u4e2d\u7684 \u001dGasLimit\u5b57\u6bb5\u7684\u548c GasUsed uint64 \u672c\u533a\u5757\u4e2d\u6240\u6709\u4ea4\u6613\u4f7f\u7528\u7684 Gas \u7684\u548c Time *Big.Int \u533a\u5757\u4ea7\u751f\u7684 unix \u65f6\u95f4\u6233\uff0c\u4e00\u822c\u662f\u6253\u5305\u533a\u5757\u7684\u65f6\u95f4\uff0c\u8fd9\u4e2a\u5b57\u6bb5\u4e0d\u662f\u51fa\u5757\u7684\u65f6\u95f4\b\u6233 Extra []byte \u533a\u5757\u7684\u9644\u52a0\u6570\u636e MixDigest common.Hash \u54c8\u5e0c\u503c\uff0c\u4e0e Nonce \u7684\u7ec4\u5408\u7528\u4e8e\u5de5\u4f5c\u91cf\u8ba1\u7b97 Nonce BlockNonce \u533a\u5757\u4ea7\u751f\u662f\u7684\u968f\u673a\u503c","title":"2.2 \u533a\u5757\u5934\u7ed3\u6784"},{"location":"ethereum/structure/#23-mpt","text":"\u878d\u5408\u4e86 Merkle Tree\uff0cPatricia Tree (\u6e90\u4e8e Trie Tree)","title":"2.3 MPT"},{"location":"ethereum/structure/#231-4","text":"fullNode shorNode valueNode hashNode fullNode fullNode \u662f\u4e00\u4e2a\u53ef\u4ee5\u643a\u5e26\u591a\u4e2a\u5b50\u8282\u70b9\u7684\u7236(\u679d)\u8282\u70b9\u3002 \u5b83\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a17\u7684node\u6570\u7ec4\u6210\u5458\u53d8\u91cfChildren\uff0c\u6570\u7ec4\u4e2d\u524d16\u4e2a\u7a7a\u4f4d\u5206\u522b\u5bf9\u5e9416\u8fdb\u5236(hex)\u4e0b\u76840-9a-f\uff0c\u8fd9\u6837\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u8282\u70b9\uff0c\u6839\u636e\u5176key\u503c16\u8fdb\u5236\u5f62\u5f0f\u4e0b\u7684\u7b2c\u4e00\u4f4d\u7684\u503c\uff0c\u5c31\u53ef\u6302\u8f7d\u5230Children\u6570\u7ec4\u7684\u67d0\u4e2a\u4f4d\u7f6e\u3002 fullNode\u672c\u8eab\u4e0d\u518d\u9700\u8981\u989d\u5916key\u53d8\u91cf\u3002 Children\u6570\u7ec4\u7684\u7b2c17\u4f4d\uff0c\u7559\u7ed9\u8be5fullNode\u7684\u6570\u636e\u90e8\u5206\u3002 fullNode\u660e\u663e\u7ee7\u627f\u4e86\u539f\u751ftrie\u7684\u7279\u70b9\uff0c\u800c\u6bcf\u4e2a\u7236\u8282\u70b9\u6700\u591a\u62e5\u670916\u4e2a\u5206\u652f\u4e5f\u5305\u542b\u4e86\u57fa\u4e8e\u603b\u4f53\u6548\u7387\u7684\u8003\u91cf shorNode shortNode \u662f\u4e00\u4e2a\u4ec5\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u7236(\u679d)\u8282\u70b9\u3002 \u5b83\u7684\u6210\u5458\u53d8\u91cfVal\u6307\u5411\u4e00\u4e2a\u5b50\u8282\u70b9\uff0c\u800c\u6210\u5458Key\u662f\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32(\u5b57\u8282\u6570\u7ec4[]byte)\u3002 \u663e\u7136shortNode\u7684\u8bbe\u8ba1\u4f53\u73b0\u4e86PatriciaTrie\u7684\u7279\u70b9\uff0c\u901a\u8fc7\u5408\u5e76\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u7236\u8282\u70b9\u548c\u5176\u5b50\u8282\u70b9\u6765\u7f29\u77edtrie\u7684\u6df1\u5ea6\uff0c\u7ed3\u679c\u5c31\u662f\u6709\u4e9b\u8282\u70b9\u4f1a\u6709\u957f\u5ea6\u66f4\u957f\u7684key\u3002 valueNode valueNode \u5145\u5f53MPT\u7684\u53f6\u5b50\u8282\u70b9\u3002 \u5b83\u5176\u5b9e\u662f\u5b57\u8282\u6570\u7ec4[]byte\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u4e0d\u5e26\u5b50\u8282\u70b9\u3002 \u5728\u4f7f\u7528\u4e2d\uff0cvalueNode\u5c31\u662f\u6240\u643a\u5e26\u6570\u636e\u90e8\u5206\u7684RLP\u54c8\u5e0c\u503c\uff0c\u957f\u5ea632byte\uff0c\u6570\u636e\u7684RLP\u7f16\u7801\u503c\u4f5c\u4e3avalueNode\u7684\u5339\u914d\u9879\u5b58\u50a8\u5728\u6570\u636e\u5e93\u91cc\u3002 hashNode hashNode \u8ddfvalueNode\u4e00\u6837\uff0c\u4e5f\u662f\u5b57\u7b26\u6570\u7ec4[]byte\u7684\u4e00\u4e2a\u522b\u540d\uff0c\u540c\u6837\u5b58\u653e32byte\u7684\u54c8\u5e0c\u503c\uff0c\u4e5f\u6ca1\u6709\u5b50\u8282\u70b9\u3002 \u4e0d\u540c\u7684\u662f\uff0chashNode\u662ffullNode\u6216\u8005shortNode\u5bf9\u8c61\u7684RLP\u54c8\u5e0c\u503c\uff0c\u6240\u4ee5\u5b83\u8ddfvalueNode\u5728\u4f7f\u7528\u4e0a\u6709\u7740\u83ab\u5927\u7684\u4e0d\u540c\u3002","title":"2.3.1 4 \u79cd\u8282\u70b9"},{"location":"ethereum/sync/","text":"\u6570\u636e\u540c\u6b65 \u00b6 1 \b\u88ab\u52a8\u540c\u6b65 \u00b6 \u88ab\u52a8\u540c\u6b65\u7531fetcher\u5b8c\u6210\uff0c\u88ab\u52a8\u6a21\u5f0f\u53c8\u5206\u4e3a\u4e24\u79cd 1. \u6536\u5230blockhash\u5e7f\u64ad\u6d88\u606f(NewBlockHashesMsg) 2. \u6536\u5230\u5b8c\u6574\u7684block\u5e7f\u64ad\u6d88\u606f(NewBlockMsg) 1.1 NewBlockHashesMsg \u88ab\u52a8\u6a21\u5f0f \u00b6 sequenceDiagram participant pm as ProtocalManager participant ft as Fetcher participant rp as Remote Peer rp ->> pm: 1: NewBlockHashesMsg pm ->> ft: 2: f.notify ft ->> ft: 3: fetchTimer.C Note right of ft: f.announced ft ->> rp: 4: fetchHeader Note right of ft: f.fetching rp -->> pm: 5: BlockHeadersMsg pm ->> ft: 6:FilterHeaders ft ->> ft: 7: f.headerFilter Note right of ft: f.fetched ft ->> ft: 8: completeTimer.C Note right of ft: f.completing ft ->> rp: 9: fetchBodies rp -->> pm: 10: BlockBodiesMsg pm ->> ft: 11: FilterBodies ft ->> ft: 12: f.bodyFilter Note right of ft: f.queue ft ->> ft: 13: Loop_queue ft ->> ft: 14: insert 1.1.1 \u8fc7\u7a0b\u63cf\u8ff0 \u00b6 \u6536\u5230\u5916\u90e8\u8282\u70b9NewBlockHashesMsg\u6d88\u606f\uff0c\u786e\u5b9a\u672c\u5730\u6ca1\u6709\uff0c\u7136\u540e\u53d1\u9001\u4e00\u4e2aannounce\u7ed9fetcher fetcher \u5faa\u73af\u5904\u7406\u6536\u5230\u7684\u6d88\u606f\uff0cheader \u6d88\u606f\u653e\u5230 f.fetching (\u6b63\u5728\u83b7\u53d6\u4e2d) \u91cc\uff0c\u6309\u8981\u6c42\u53d1\u51fa fetchHeader \u8fdc\u7aef\u6536\u5230 fetchHeader \u6d88\u606f\u4f1a\u53d1\u51fa BlockHeadersMsg \u6536\u5230 header \u6d88\u606f\u540e\uff0c\u68c0\u67e5\u662f\u5426\u9700\u8981\u83b7\u53d6 body \u5982\u679c\u9700\u8981\uff0c\u53d1\u51fa fetchBodies \u6d88\u606f \u8fdc\u7aef\u56de\u590d BlockBodiesMsg \u5f97\u5230 body \u6570\u636e\uff0c\u9a8c\u8bc1\uff0c\u5b58\u50a8 1.2 NewBlockMsg \u88ab\u52a8\u6a21\u5f0f \u00b6 sequenceDiagram participant pm as ProtocalManager participant ft as Fetcher participant rp as Remote Peer rp ->> pm: 1: NewBlogMsg pm ->> ft: 2: Enqueue ft ->> ft: 3: inject ft ->> ft: 4: enqueue ft ->> ft: 5: Loop_queue ft ->> ft: 6: insert 1.2.1 \u8fc7\u7a0b\u63cf\u8ff0 \u00b6 NewBlockHashesMsg \u6a21\u5f0f\u7684\u7b80\u5316 2 \u4e3b\u52a8\u540c\u6b65 \u00b6 2.1 \u4e3b\u52a8\u540c\u6b65\u7684\u4e3b\u8981\u573a\u666f \u00b6 geth\u521a\u542f\u52a8 \u65b0peer\u52a0\u5165 \u5b9a\u65f6sync 2.2 \u67e5\u627e\u901a\u4fe1\u8282\u70b9\u4e3b\u94fe\u5171\u540c\u7956\u5148 \u00b6 \u6bd4\u7279\u5e01\u662f\u5c06\u672c\u5730chain\u9876\u7aefN\u4e2ablock\u7684hash\u53ca\u540e\u7eed\u4ee51/2\u8df3\u8dc3\u7684\u65b9\u5f0f\u5f97\u5230m\u4e2ablock\u7684hash(blocklocator)\u53d1\u9001\u7ed9\u5916\u90e8\u8282\u70b9\uff0c\u8fd9\u6837\u5916\u90e8\u8282\u70b9\u80fd\u8f7b\u677e\u7684\u627e\u5230\u4e24\u4e2a\u8282\u70b9\u7684\u94fe\u7684\u5171\u540c\u7956\u5148 \u4ee5\u592a\u5e01\u4e0d\u4e00\u6837\uff0c\u5b83\u5206\u4e24\u4e2a\u6b65\u9aa4\u6765\u64cd\u4f5c\uff0c\u7b2c\u4e00\u6b65\u662f\u5411\u5916\u90e8\u8282\u70b9\u8bf7\u6c42N\u4e2ablock\u7684hash\u5e76\u548c\u672c\u5730\u5bf9\u6bd4\u627e\u5230\u5171\u540c\u7956\u5148\uff0c\u5982\u679c\u7b2c\u4e00\u6b65\u6ca1\u6709\u627e\u5230\u7956\u5148\uff0c\u5219\u6309\u7167\u7c7b\u4f3c1/2\u8df3\u8dc3\u7684\u65b9\u5f0f\u5faa\u73af\u8bf7\u6c42\u66f4\u524d\u9762\u7684\u533a\u5757\u7684hash\uff0c\u5e76\u548c\u672c\u5730\u5bf9\u6bd4\u6765\u627e\u5230\u5171\u540c\u7956\u5148 \u53ef\u89c1\u4e24\u79cd\u65b9\u5f0f\u7684\u6838\u5fc3\u533a\u522b\u662f\uff0c\u6bd4\u7279\u5e01\u662f\u4e3b\u52a8\u63d0\u4f9b\u672c\u5730\u94fe\u533a\u5757\u5934\u4fe1\u606f\uff0c\u5916\u90e8\u8282\u70b9\u8d1f\u8d23\u627e\u51fa\u7956\u5148\uff0c\u800c\u4ee5\u592a\u5e01\u662f\u4ece\u5916\u90e8\u8282\u70b9\u83b7\u53d6\u6570\u636e\uff0c\u672c\u5730\u8d1f\u8d23\u627e\u51fa\u7956\u5148\u3002\u5982\u679c\u5171\u540c\u7956\u5148\u5927\u90e8\u5206\u90fd\u662f\u5728\u524dN\u4e2a\u533a\u5757\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5982\u679c\u8fdb\u884c\u52301/2\u8df3\u8dc3\u8bf7\u6c42\uff0c\u5219\u4ee5\u592a\u574a\u7684\u8bf7\u6c42\u6b21\u6570\u660e\u663e\u589e\u591a\u3002","title":"\u540c\u6b65"},{"location":"ethereum/sync/#_1","text":"","title":"\u6570\u636e\u540c\u6b65"},{"location":"ethereum/sync/#1","text":"\u88ab\u52a8\u540c\u6b65\u7531fetcher\u5b8c\u6210\uff0c\u88ab\u52a8\u6a21\u5f0f\u53c8\u5206\u4e3a\u4e24\u79cd 1. \u6536\u5230blockhash\u5e7f\u64ad\u6d88\u606f(NewBlockHashesMsg) 2. \u6536\u5230\u5b8c\u6574\u7684block\u5e7f\u64ad\u6d88\u606f(NewBlockMsg)","title":"1 \b\u88ab\u52a8\u540c\u6b65"},{"location":"ethereum/sync/#11-newblockhashesmsg","text":"sequenceDiagram participant pm as ProtocalManager participant ft as Fetcher participant rp as Remote Peer rp ->> pm: 1: NewBlockHashesMsg pm ->> ft: 2: f.notify ft ->> ft: 3: fetchTimer.C Note right of ft: f.announced ft ->> rp: 4: fetchHeader Note right of ft: f.fetching rp -->> pm: 5: BlockHeadersMsg pm ->> ft: 6:FilterHeaders ft ->> ft: 7: f.headerFilter Note right of ft: f.fetched ft ->> ft: 8: completeTimer.C Note right of ft: f.completing ft ->> rp: 9: fetchBodies rp -->> pm: 10: BlockBodiesMsg pm ->> ft: 11: FilterBodies ft ->> ft: 12: f.bodyFilter Note right of ft: f.queue ft ->> ft: 13: Loop_queue ft ->> ft: 14: insert","title":"1.1 NewBlockHashesMsg \u88ab\u52a8\u6a21\u5f0f"},{"location":"ethereum/sync/#111","text":"\u6536\u5230\u5916\u90e8\u8282\u70b9NewBlockHashesMsg\u6d88\u606f\uff0c\u786e\u5b9a\u672c\u5730\u6ca1\u6709\uff0c\u7136\u540e\u53d1\u9001\u4e00\u4e2aannounce\u7ed9fetcher fetcher \u5faa\u73af\u5904\u7406\u6536\u5230\u7684\u6d88\u606f\uff0cheader \u6d88\u606f\u653e\u5230 f.fetching (\u6b63\u5728\u83b7\u53d6\u4e2d) \u91cc\uff0c\u6309\u8981\u6c42\u53d1\u51fa fetchHeader \u8fdc\u7aef\u6536\u5230 fetchHeader \u6d88\u606f\u4f1a\u53d1\u51fa BlockHeadersMsg \u6536\u5230 header \u6d88\u606f\u540e\uff0c\u68c0\u67e5\u662f\u5426\u9700\u8981\u83b7\u53d6 body \u5982\u679c\u9700\u8981\uff0c\u53d1\u51fa fetchBodies \u6d88\u606f \u8fdc\u7aef\u56de\u590d BlockBodiesMsg \u5f97\u5230 body \u6570\u636e\uff0c\u9a8c\u8bc1\uff0c\u5b58\u50a8","title":"1.1.1 \u8fc7\u7a0b\u63cf\u8ff0"},{"location":"ethereum/sync/#12-newblockmsg","text":"sequenceDiagram participant pm as ProtocalManager participant ft as Fetcher participant rp as Remote Peer rp ->> pm: 1: NewBlogMsg pm ->> ft: 2: Enqueue ft ->> ft: 3: inject ft ->> ft: 4: enqueue ft ->> ft: 5: Loop_queue ft ->> ft: 6: insert","title":"1.2 NewBlockMsg \u88ab\u52a8\u6a21\u5f0f"},{"location":"ethereum/sync/#121","text":"NewBlockHashesMsg \u6a21\u5f0f\u7684\u7b80\u5316","title":"1.2.1 \u8fc7\u7a0b\u63cf\u8ff0"},{"location":"ethereum/sync/#2","text":"","title":"2 \u4e3b\u52a8\u540c\u6b65"},{"location":"ethereum/sync/#21","text":"geth\u521a\u542f\u52a8 \u65b0peer\u52a0\u5165 \u5b9a\u65f6sync","title":"2.1 \u4e3b\u52a8\u540c\u6b65\u7684\u4e3b\u8981\u573a\u666f"},{"location":"ethereum/sync/#22","text":"\u6bd4\u7279\u5e01\u662f\u5c06\u672c\u5730chain\u9876\u7aefN\u4e2ablock\u7684hash\u53ca\u540e\u7eed\u4ee51/2\u8df3\u8dc3\u7684\u65b9\u5f0f\u5f97\u5230m\u4e2ablock\u7684hash(blocklocator)\u53d1\u9001\u7ed9\u5916\u90e8\u8282\u70b9\uff0c\u8fd9\u6837\u5916\u90e8\u8282\u70b9\u80fd\u8f7b\u677e\u7684\u627e\u5230\u4e24\u4e2a\u8282\u70b9\u7684\u94fe\u7684\u5171\u540c\u7956\u5148 \u4ee5\u592a\u5e01\u4e0d\u4e00\u6837\uff0c\u5b83\u5206\u4e24\u4e2a\u6b65\u9aa4\u6765\u64cd\u4f5c\uff0c\u7b2c\u4e00\u6b65\u662f\u5411\u5916\u90e8\u8282\u70b9\u8bf7\u6c42N\u4e2ablock\u7684hash\u5e76\u548c\u672c\u5730\u5bf9\u6bd4\u627e\u5230\u5171\u540c\u7956\u5148\uff0c\u5982\u679c\u7b2c\u4e00\u6b65\u6ca1\u6709\u627e\u5230\u7956\u5148\uff0c\u5219\u6309\u7167\u7c7b\u4f3c1/2\u8df3\u8dc3\u7684\u65b9\u5f0f\u5faa\u73af\u8bf7\u6c42\u66f4\u524d\u9762\u7684\u533a\u5757\u7684hash\uff0c\u5e76\u548c\u672c\u5730\u5bf9\u6bd4\u6765\u627e\u5230\u5171\u540c\u7956\u5148 \u53ef\u89c1\u4e24\u79cd\u65b9\u5f0f\u7684\u6838\u5fc3\u533a\u522b\u662f\uff0c\u6bd4\u7279\u5e01\u662f\u4e3b\u52a8\u63d0\u4f9b\u672c\u5730\u94fe\u533a\u5757\u5934\u4fe1\u606f\uff0c\u5916\u90e8\u8282\u70b9\u8d1f\u8d23\u627e\u51fa\u7956\u5148\uff0c\u800c\u4ee5\u592a\u5e01\u662f\u4ece\u5916\u90e8\u8282\u70b9\u83b7\u53d6\u6570\u636e\uff0c\u672c\u5730\u8d1f\u8d23\u627e\u51fa\u7956\u5148\u3002\u5982\u679c\u5171\u540c\u7956\u5148\u5927\u90e8\u5206\u90fd\u662f\u5728\u524dN\u4e2a\u533a\u5757\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u5dee\u4e0d\u591a\uff0c\u4f46\u662f\u5982\u679c\u8fdb\u884c\u52301/2\u8df3\u8dc3\u8bf7\u6c42\uff0c\u5219\u4ee5\u592a\u574a\u7684\u8bf7\u6c42\u6b21\u6570\u660e\u663e\u589e\u591a\u3002","title":"2.2 \u67e5\u627e\u901a\u4fe1\u8282\u70b9\u4e3b\u94fe\u5171\u540c\u7956\u5148"},{"location":"trias/datastore/","text":"\bTrias \u6570\u636e\u5b58\u50a8 \u00b6 1. \u4e24\u4e2a\u6982\u5ff5 \u00b6 1.1 \u6761\u76ee \u00b6 \u4ee5\u5f80\u7684\u533a\u5757\u94fe\u5982\b\u6bd4\u7279\u5e01\uff0c\u4ee5\u592a\u574a\uff0c\u5757\u4f53\u91cc\u9762\u7684\u7ed3\u6784\u7684\u683c\u5f0f\u662f\u56fa\u5b9a\u7684\u3002\u4e0d\u7ba1\u662f UTXO \u7684\u5f62\u5f0f\uff0c\u8fd8\u662f\u667a\u80fd\u5408\u7ea6\u7684\u5f62\u5f0f\uff0c\b\u683c\u5f0f\u4e0a\u90fd\u662f\u5df2\u7ecf\u7ea6\u5b9a\u597d\u7684\u3002\u4e3a\u4e86\u80fd\u591f\u5728\u6570\u636e\u4fdd\u5b58\u4e0a\u5904\u7406\u7684\u66f4\u52a0\u7075\u6d3b\uff0c\u6211\u4eec\u63d0\u51fa\u6761\u76ee\u7684\u6982\u5ff5\u3002\u533a\u5757\u4f53\u4e2d\u5b58\u50a8\u7740\u7684\u662f\b\u6761\u76ee\u7684\u96c6\u5408\u3002 1.1.1 \u4ec0\u4e48\u662f\u6761\u76ee \u00b6 \u6761\u76ee\u662f\u4e00\u4e2a\u5f88\u5bbd\u6cdb\u7684\u6982\u5ff5\u3002\u5b83\u662f\u4e00\u4e2a\u683c\u5f0f\b\u81ea\u89e3\u91ca\u7684\u6570\u636e\u5757\uff0c\u662f\u5404\u79cd\u4ea4\u6613\u5f62\u5f0f\u7684\u4e00\u79cd\u62bd\u8c61\u3002\b\u683c\u5f0f\u5982\u4e0b: \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 itemType uint32 \u7c7b\u578b varint payloadSize uint32 \b\u8f7d\u8377\u5927\u5c0f varies payload []byte \u8f7d\u8377 \u5bf9\u6bcf\u4e00\u79cd\u7c7b\u578b\uff0cpayload \u90fd\u5bf9\u5e94\u7740\u4e0d\u540c\u7684\u7ed3\u6784\u3002 1.1.2 \u6761\u76ee\u7684\u4f18\u70b9 \u00b6 \u4e0d\u7ba1\u662f UTXO \u7684\u5f62\u5f0f\uff0c\u8fd8\u662f\u667a\u80fd\u5408\u7ea6\u7684\u5f62\u5f0f\uff0c\u53ea\u8981\u5b9a\u4e49\u597d\u4e86\u7ed3\u6784\u548c\u76f8\u5e94\u7684\u89e3\u6790\u903b\u8f91\uff0c\u628a\u5b83\u4eec\u4f5c\u4e3a\u6761\u76ee\u7684 payload \u90e8\u5206\uff0c\u4ece\u5916\u9762\u770b\u90fd\u662f\u4e00\u4e2a\u6761\u76ee\uff0c\u8fd9\u5c31\u4e3a\u4e0d\u540c\u7684\u4e1a\u52a1\u903b\u8f91\u5b58\u50a8\u6210\u76f8\u540c\u5f62\u5f0f\u5e26\u6765\u4e86\u53ef\u80fd\u3002 \u5982\u679c\u73b0\u6709\u7684\u6570\u636e\u683c\u5f0f\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u65b0\u589e\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u90a3\u4e48\u53ef\u4ee5\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5e76\u5b9a\u4e49\u5bf9\u5e94\u7684 itemType\uff0c\u5982\u679c\u5df2\u6709\u7684\u683c\u5f0f\u9700\u8981\u66f4\u65b0\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\b\u57fa\u4e8e\u539f\u6765\u683c\u5f0f\u7684\u65b0\u683c\u5f0f\uff0c\b\u6bd5\u7adf\u533a\u5757\u94fe\u7684\u6570\u636e\u662f\u4e0d\u80fd\u7be1\u6539\u7684\uff0c\u540c\u65f6\uff0c\b\u8fd9\u4e5f\u7b26\u5408\u4e86\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u4e2d\u7684 \"\u5bf9\u4fee\u6539\u5173\u95ed\uff0c\u5bf9\u6269\u5c55\u5f00\u653e\" \u7684\u5f00\u95ed\u539f\u5219\u3002\u662f\u7cfb\u7edf\u53ef\u4ee5\u5411\u540e\u517c\u5bb9\u3002 1.2 \u6587\u4ef6\u4ed3\u5e93 \u00b6 \u6bd4\u7279\u5e01\uff0c\u8d85\u7ea7\u8d26\u672c\u4e2d\u90fd\u662f\u4ee5\u533a\u5757\u4e3a\u5355\u4f4d\uff0c\u591a\u4e2a\u533a\u5757\u4fdd\u5b58\u5230\u4e00\u4e2a\u533a\u5757\u6587\u4ef6\u4e2d\u3002EOS \u5728\u4e0e IPFS \u7684\u7ed3\u5408\u4e2d\uff0c\u628a\u4ea4\u6613\u4fdd\u5b58\u6210\u6587\u4ef6\uff0c\u533a\u5757\u4e2d\u4fdd\u5b58\u4e86\u5bf9\u4ea4\u6613\u7684\u5f15\u7528\u3002\u663e\u7136 EOS \u7684\u505a\u6cd5\uff0c\u66f4\u52a0\u7075\u6d3b\u3002\u56e0\u4e3a\u5404\u4ea4\u6613\u88ab\u6253\u5305\u5230\u4e00\u4e2a\u533a\u5757\u4e2d\uff0c\u53ea\u662f\u65f6\u95f4\u76f8\u8fd1\uff0c\u6240\u4ee5\u5728\u5b58\u50a8\u4e2d\u7269\u7406\u76f8\u90bb\uff0c\u5b83\u4eec\u591a\u6570\u60c5\u51b5\u4e0b\u5e76\u6ca1\u6709\u903b\u8f91\u4e0a\u7684\u5fc5\u7136\u8054\u7cfb\u3002\u6240\u4ee5\u6211\u4eec\u63d0\u51fa\u6587\u4ef6\u4ed3\u5e93\u7684\u6982\u5ff5\uff0c\u4e3b\u8981\u7528\u6765\u5b58\u50a8\u6761\u76ee(\u4e5f\u6709\u5176\u4ed6\u6587\u4ef6\uff0c\u5982\b\u72b6\u6001\u6587\u4ef6\u7b49)\uff0c\u4e00\u4e2a\u6761\u76ee\u4e00\u4e2a\u6587\u4ef6\uff0c\u533a\u5757\u4e2d\u53ea\u4fdd\u7559\u6587\u4ef6\u7684\u7d22\u5f15\uff0c\u7d22\u5f15\u6709\u53ef\u80fd\u662f IPFS \u7684 FileId\uff0c\u6216\u5176\u4ed6\u3002 1.2.1 \u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528 IPFS\uff0c\u8fd8\u8981\u63d0\u51fa\u6587\u4ef6\u4ed3\u5e93 \u00b6 \u6587\u4ef6\u4ed3\u5e93\u662f\u4e00\u4e2a\u62bd\u8c61\uff0c\bIPFS \u53ea\u662f\u771f\u5b9e\u5b58\u50a8\u6587\u4ef6\u7684\u65b9\u5f0f\u4e4b\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 IPFS\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7c7b\u4f3c\u7cfb\u7edf\uff0c\u751a\u81f3\u81ea\u5df1\u5b9e\u73b0\uff0c\u6216\u662f\u51e0\u79cd\u65b9\u5f0f\u7684\u7ed3\u5408\u3002\u5bf9\u4e8e\u60f3\u8981\u83b7\u53d6\u6761\u76ee\u5185\u5bb9\u7684\u8282\u70b9\u6765\u8bf4\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u5173\u5fc3\u5b9e\u73b0\u65b9\u5f0f\u3002\u540c\u65f6\uff0c\u4e3a\u4eca\u540e\u7cfb\u7edf\u7684\u6269\u5bb9\u5e26\u6765\u4e86\u66f4\u591a\u7684\u9009\u62e9\u3002 1.2.2 \u4e3a\u4ec0\u4e48\u4e0d\u5b58\u50a8\u533a\u5757\u6587\u4ef6\uff0c\u800c\u662f\u5b58\u50a8\u6761\u76ee\u6587\u4ef6 \u00b6 \u5982\u524d\u9762\u6240\u8bf4\uff0c\u591a\u4e2a\u6761\u76ee\u903b\u8f91\u4e0a\u5f88\u53ef\u80fd\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5047\u8bbe\u4e00\u4e2a\u8282\u70b9\u60f3\u8981\u83b7\u53d6\u67d0\u4e2a\u6761\u76ee\u7684\u5185\u5bb9\uff0c\u800c\u9996\u5148\u83b7\u53d6\u4e86\u6574\u4e2a\u533a\u5757\uff0c\u7136\u540e\u518d\u8fdb\u884c\u89e3\u6790\uff0c\u52bf\u5fc5\u52a0\u5927\u4e86\u65e0\u6548\u7684\u6570\u636e\u4f20\u8f93\uff0c\u800c\u5f71\u54cd\u4e86\u7cfb\u7edf\u6027\u80fd\u3002 1. \u5b58\u50a8\u7ed3\u6784 \u00b6 1.1 \u6587\u4ef6\u7cfb\u7edf \u00b6 \b\u6587\u4ef6\u7cfb\u7edf\u7528\u6765\u5b58\u50a8\u533a\u5757\u6570\u636e\uff0c\u72b6\u6001\u6570\u636e\uff0c\u5386\u53f2\u6570\u636e\uff0c\b\u4ee5\u4e8c\u8fdb\u5236\u6570\u636e\u6587\u4ef6\u6216\u6587\u672c\u6587\u4ef6\u6765\u5b58\u50a8\u3002 1.1 \u6587\u4ef6\u5b58\u50a8\u7684\u4f18\u52bf \u00b6 \u4e0d\u53d7\u5e73\u53f0\u5f71\u54cd(\u64cd\u4f5c\u7cfb\u7edf) \u4e0d\u9700\u8981\u66f4\u591a\b\u4f9d\u8d56(\u76f8\u5bf9\u4e8e\u6570\u636e\u5e93\u6765\u8bf4) \u4fbf\u4e8e\u4e0e IPFS \u8fd9\u79cd\u53bb\u4e2d\u5fc3\u5316\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u5bf9\u63a5 \u9002\u5f53\u7684\b\u5bf9\u6587\u4ef6\u5927\u5c0f\u8fdb\u884c\u89c4\u5212\uff0c\u5bf9\u6587\u4ef6\u8fdb\u884c\u7ec4\u7ec7\uff0c\u4fbf\u4e8e\u4f20\u64ad 1.2 \u57fa\u7840\u6570\u636e\u7ed3\u6784 \u00b6 1.2.1 \bBlock \u00b6 \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 magicNumber uint32 \u503c \u5f85\u5b9a, \u4f5c\u4e3a\u533a\u5757\u4e4b\u95f4\u7684\u5206\u9694\u7b26 4 blockSize uint32 \u540e\u9762\u6570\u636e\u5230\u5757\u7ed3\u675f\u7684\u5b57\u8282\u6570 68 blockHeader []byte \u5757\u5934 (\u5927\u5c0f\u5f85\u5b9a) varint itemCount uint64 \u6761\u76ee\u6570\u91cf varies items []byte \u6761\u76ee\u96c6\u5408 1.2.2 Header \u00b6 \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 version uint32 \u7248\u672c\u53f7 32 previous_block_hash [32]byte \u524d\u4e00\u4e2a block \u7684 \bhash \u503c 32 merkle_root_hash [32]byte \u533a\u5757\u5185\u6240\u6709 Item \u7684 merkle_hash \u503c Header \u4e2d\u7684\u5176\u4ed6\u9879\u5f85\u5b9a \b\u6bd4\u5982\u6bd4\u7279\u5e01\u4e2d\u7684 Hash \u96be\u5ea6\u503c\uff0c\u8ba1\u7b97\u7528\u7684\u968f\u673a\u6570 Nonce \u8ddf\u5171\u8bc6\u7b97\u6cd5\u76f8\u5173\uff0c\u8fd9\u91cc\u5f85\u5b9a 1.2.3 \u6761\u76ee \u00b6 \u6761\u76ee (Item) \u6761\u76ee \u662f\u4e00\u4e2a\u5bbd\u6cdb\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u662f\u7c7b\u4f3c\u6bd4\u7279\u5e01\u7684\u4ea4\u6613\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u4f3c\u4ee5\u592a\u574a\u7684\u4ea4\u6613\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e26\u6765\u4e24\u4e2a\u597d\u5904\uff1a \u4f7f\u5f97\u8d26\u53f7\u72b6\u6001\uff0cUTXO \u4e24\u79cd\u4e0d\u540c\u673a\u5236\u7684\u6570\u636e\u53ef\u4ee5\u5171\u5b58 \u5bf9\u5df2\u6709\u7ed3\u6784\u8fdb\u884c\u6539\u8fdb\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a itemType \u53ca\u5176\u89e3\u91ca\u65b9\u5f0f 1.2 \u7d22\u5f15\u7cfb\u7edf \u00b6 \u7528\u6765\u5feb\u901f\u5b9a\u4f4d\u5b58\u50a8\u5185\u5bb9\u3002\u901a\u8fc7\u7d22\u5f15\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d\u5230 Block\uff0cItem (\u5404\u79cd\u4ea4\u6613\u6216\u5176\u4ed6\u6570\u636e\u5f62\u5f0f)\uff0c\u4ee5\u53ca Item \u5f53\u4e2d\u5b50\u9879\u3002\u7d22\u5f15\u7cfb\u7edf\u4f7f\u7528 levelDB\u3002 2 \u8282\u70b9\u5206\u5de5 \u00b6 2.1 \u5168\u8282\u70b9 \u00b6 \u4e0e IPFS \u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u5bf9\u63a5\uff0c\u5b58\u50a8 IPFS \u8fd4\u56de\u7684 FileId\uff0c\u5f62\u6210 FileId \b\u4e0e\u533a\u5757 Hash \u7684\u6620\u5c04\u5173\u5fc3 \u5b58\u653e\u6240\u6709\u533a\u5757\u7d22\u5f15\uff0c\u6761\u76ee\u7d22\u5f15\uff0c\u72b6\u6001\u7d22\u5f15 \u80fd\u63d0\u4f9b\u5168\u9762\u7684\u9a8c\u8bc1 \u4e0a\u4f20\u533a\u5757\u6587\u4ef6\u5230 IPFS \u7f13\u5b58\u8fd1\u671f\u533a\u5757 Note IPFS \u53ea\u8d1f\u8d23\u5b58\u50a8\u6587\u4ef6\uff0c\u5e76\u4e0d\u53c2\u4e0e\u4e1a\u52a1\u903b\u8f91\uff0c\u5982\u4f55\u89e3\u6790\u6587\u4ef6\u5185\u5bb9\uff0c\u8fd8\u9700\u8981\u5168\u8282\u70b9\u6765\u8d1f\u8d23\u3002 IPFS \u7684 FileId \u867d\u7136\u4e5f\u662f\u5185\u5bb9\u54c8\u5e0c\uff0c\u4f46\u4e0e\u533a\u5757\u54c8\u5e0c\u7684\u8ba1\u7b97\b\u89c4\u5219\u5e76\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u5b58\u6620\u5c04\u5173\u7cfb 2.2 \u8f7b\u8282\u70b9 \u00b6 \u5b58\u653e\u6240\u6709\u6761\u76ee\u54c8\u5e0c\uff0c\b\u5728\u63a5\u5230\u5ba2\u6237\u8282\u70b9\u4ea4\u6613\u8bf7\u6c42\u65f6\u53ef\u6839\u636e\u6761\u76ee\u54c8\u5e0c\u4ece\u5168\u8282\u70b9\u83b7\u53d6\u6761\u76ee\u6570\u636e\uff0c\u8fdb\u884c\u9a8c\u8bc1 \u6309\u7167\u5ba2\u6237\u8282\u70b9\u7684\u4ea4\u6613\u8bf7\u6c42\u5f62\u6210\u6761\u76ee \u90e8\u5206\u9a8c\u8bc1 \u6253\u5305\u533a\u5757\uff0c\u4e0a\u4f20\u7ed9\u5168\u8282\u70b9 2.3 \b\u5ba2\u6237\u8282\u70b9 \u00b6 \u4fdd\u5b58\u4e0e\u672c\u8282\u70b9\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u6700\u5927\u5316\b\u51cf\u5c11\u6570\u636e\u5b58\u50a8\u91cf\uff0c\u589e\u5f3a\u5ba2\u6237\u8282\u70b9\u7684\u53ef\u7528\u6027 3 \u540c\u6b65 \u00b6 3.1 \u88ab\u52a8\u540c\u6b65 \u00b6 3.1.1 \u88ab\u52a8\u540c\u6b65\u65f6\u673a \u00b6 3.1.1.1 \bNewBlockHashMsg \u00b6 \u5168\u8282\u70b9 sequenceDiagram participant L as Local FullNode participant P as Peer FullNode P ->> L: NewBlockHashMsg L ->> L: CheckHashExist L ->> P: GetBlockMsg P -->> L: BlockMsg L ->> L: SaveBlock Send NewBlockHashMsg \u8fc7\u7a0b\u63cf\u8ff0: Peer FullNode \u5728\u5b58\u5165\u65b0\u533a\u5757\uff0c\u6216\u83b7\u53d6\u65b0\u533a\u5757\u4e4b\u540e \u53d1\u51fa NewBlockHashMsg Local FullNode \u83b7\u53d6\u5230 NewBlockHashMsg\uff0c\u5728\u672c\u5730\u8fdb\u884c\u5bf9\u6bd4\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u53d1\u51fa GetBlockMsg \u7ed9 Peer FullNode Peer FullNode \u83b7\u53d6\u5230 GetBlockMsg \u540e\uff0c\u4ece\u672c\u5730\u67e5\u8be2\u5e76\u901a\u8fc7 BlockMsg \u5c06 Block \u4fe1\u606f\u53d1\u9001\u7ed9 Local FullNode Local FullNode \u5728\u62ff\u5230 Block \u4fe1\u606f\u4e4b\u540e\uff0c\u8ba1\u7b97 Block\uff0cItem \u7b49\u4fe1\u606f\u7684\u7d22\u5f15\uff0c\u5e76\u5c06 Block\uff0c\u76f8\u5173\u7d22\u5f15\u4fdd\u5b58 \u8f7b\u8282\u70b9 sequenceDiagram participant L as Local LightNode participant P as Peer FullNode P ->> L: NewBlockHashMsg L ->> L: CheckHashExist L ->> P: GetBlockHashMsg P -->> L: BlockHashMsg L ->> L: SaveHash SaveItemHash \u8fc7\u7a0b\u63cf\u8ff0: Peer FullNode \u5728\u5b58\u5165\u533a\u5757\uff0c\u6216\u83b7\u53d6\u65b0\u533a\u5757\u4e4b\u540e \u53d1\u51fa NewBlockHashMsg Local LightNode \u83b7\u53d6\u5230 NewBlockHashMsg\uff0c\u5728\u672c\u5730\u8fdb\u884c\u5bf9\u6bd4\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u53d1\u51fa GetBlockHashMsg \u7ed9 Peer FullNode Peer FullNode \u901a\u8fc7 BlockHashMsg \u5c06 BlockHash, ItemHash \u7b49\u4fe1\u606f\u53d1\u9001\u7ed9 Local ClientNode Local ClientNode \u4fdd\u5b58 BlockHash, ItemHash \u7b49\u4fe1\u606f BlockHashMsg \bBlockHashMsg \u4f1a\u5305\u542b\u533a\u5757\u5f53\u4e2d\u7684 \u6761\u76ee \bHash 3.2 \u4e3b\u52a8\u540c\u6b65 \u00b6 3.2.1 \u4e3b\u52a8\u540c\u6b65\u65f6\u673a \u00b6 3.2.1.1 \u65b0\u8282\u70b9\u52a0\u5165 \u00b6 \u5168\u8282\u70b9 sequenceDiagram participant L as Local FullNode participant P as Peer FullNode L ->> P: GetHeaderHashMsg P -->> L: HeaderHashMsg L ->> P: GetBlockMsg P -->> L: BlockMsg L ->> L: SaveBlock \u8fc7\u7a0b\u63cf\u8ff0: \u5f53\u4e00\u4e2a\u65b0\u7684\u5168\u8282\u70b9\u52a0\u5165\uff0c\u4f1a\u5faa\u73af\u5411\u5176\u4ed6 FullNode \u53d1\u51fa GetHeaderHashMsg \u8fdc\u7aef FullNode \u53d1\u9001 HeaderHashMsg \u7ed9\u672c\u8282\u70b9 \u672c\u8282\u70b9\u6839\u636e HeaderHash \u5411\u8fdc\u7aef\u8282\u70b9 \u53d1\u51fa GetBlockMsg \u8fdc\u7aef FullNode \u53d1\u9001 BlockMsg \u7ed9\u672c\u8282\u70b9 \b\u672c\u8282\u70b9\u8fdb\u884c\u6570\u636e\u4fdd\u5b58 \u8f7b\u8282\u70b9 sequenceDiagram participant L as Local LightNode participant P as Peer LightNode L ->> P: GetHeaderHashMsg P -->> L: HeaderHashMsg L ->> L: SaveHash \u8fc7\u7a0b\u63cf\u8ff0: \u5f53\u4e00\u4e2a\u65b0\u7684\u5168\u8282\u70b9\u52a0\u5165\uff0c\u4f1a\u5faa\u73af\u5411\u5176\u4ed6 FullNode \u53d1\u51fa GetHeaderHashMsg \u8fdc\u7aef FullNode \u53d1\u9001 HeaderHashMsg \u7ed9\u672c\u8282\u70b9 \b\u672c\u8282\u70b9\u8fdb\u884c\u6570\u636e\u4fdd\u5b58","title":"\u6570\u636e\u5c42"},{"location":"trias/datastore/#trias","text":"","title":"\bTrias \u6570\u636e\u5b58\u50a8"},{"location":"trias/datastore/#1","text":"","title":"1. \u4e24\u4e2a\u6982\u5ff5"},{"location":"trias/datastore/#11","text":"\u4ee5\u5f80\u7684\u533a\u5757\u94fe\u5982\b\u6bd4\u7279\u5e01\uff0c\u4ee5\u592a\u574a\uff0c\u5757\u4f53\u91cc\u9762\u7684\u7ed3\u6784\u7684\u683c\u5f0f\u662f\u56fa\u5b9a\u7684\u3002\u4e0d\u7ba1\u662f UTXO \u7684\u5f62\u5f0f\uff0c\u8fd8\u662f\u667a\u80fd\u5408\u7ea6\u7684\u5f62\u5f0f\uff0c\b\u683c\u5f0f\u4e0a\u90fd\u662f\u5df2\u7ecf\u7ea6\u5b9a\u597d\u7684\u3002\u4e3a\u4e86\u80fd\u591f\u5728\u6570\u636e\u4fdd\u5b58\u4e0a\u5904\u7406\u7684\u66f4\u52a0\u7075\u6d3b\uff0c\u6211\u4eec\u63d0\u51fa\u6761\u76ee\u7684\u6982\u5ff5\u3002\u533a\u5757\u4f53\u4e2d\u5b58\u50a8\u7740\u7684\u662f\b\u6761\u76ee\u7684\u96c6\u5408\u3002","title":"1.1 \u6761\u76ee"},{"location":"trias/datastore/#111","text":"\u6761\u76ee\u662f\u4e00\u4e2a\u5f88\u5bbd\u6cdb\u7684\u6982\u5ff5\u3002\u5b83\u662f\u4e00\u4e2a\u683c\u5f0f\b\u81ea\u89e3\u91ca\u7684\u6570\u636e\u5757\uff0c\u662f\u5404\u79cd\u4ea4\u6613\u5f62\u5f0f\u7684\u4e00\u79cd\u62bd\u8c61\u3002\b\u683c\u5f0f\u5982\u4e0b: \u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 itemType uint32 \u7c7b\u578b varint payloadSize uint32 \b\u8f7d\u8377\u5927\u5c0f varies payload []byte \u8f7d\u8377 \u5bf9\u6bcf\u4e00\u79cd\u7c7b\u578b\uff0cpayload \u90fd\u5bf9\u5e94\u7740\u4e0d\u540c\u7684\u7ed3\u6784\u3002","title":"1.1.1 \u4ec0\u4e48\u662f\u6761\u76ee"},{"location":"trias/datastore/#112","text":"\u4e0d\u7ba1\u662f UTXO \u7684\u5f62\u5f0f\uff0c\u8fd8\u662f\u667a\u80fd\u5408\u7ea6\u7684\u5f62\u5f0f\uff0c\u53ea\u8981\u5b9a\u4e49\u597d\u4e86\u7ed3\u6784\u548c\u76f8\u5e94\u7684\u89e3\u6790\u903b\u8f91\uff0c\u628a\u5b83\u4eec\u4f5c\u4e3a\u6761\u76ee\u7684 payload \u90e8\u5206\uff0c\u4ece\u5916\u9762\u770b\u90fd\u662f\u4e00\u4e2a\u6761\u76ee\uff0c\u8fd9\u5c31\u4e3a\u4e0d\u540c\u7684\u4e1a\u52a1\u903b\u8f91\u5b58\u50a8\u6210\u76f8\u540c\u5f62\u5f0f\u5e26\u6765\u4e86\u53ef\u80fd\u3002 \u5982\u679c\u73b0\u6709\u7684\u6570\u636e\u683c\u5f0f\u4e0d\u8db3\u4ee5\u6ee1\u8db3\u65b0\u589e\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u90a3\u4e48\u53ef\u4ee5\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u683c\u5f0f\uff0c\u5e76\u5b9a\u4e49\u5bf9\u5e94\u7684 itemType\uff0c\u5982\u679c\u5df2\u6709\u7684\u683c\u5f0f\u9700\u8981\u66f4\u65b0\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\b\u57fa\u4e8e\u539f\u6765\u683c\u5f0f\u7684\u65b0\u683c\u5f0f\uff0c\b\u6bd5\u7adf\u533a\u5757\u94fe\u7684\u6570\u636e\u662f\u4e0d\u80fd\u7be1\u6539\u7684\uff0c\u540c\u65f6\uff0c\b\u8fd9\u4e5f\u7b26\u5408\u4e86\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u4e2d\u7684 \"\u5bf9\u4fee\u6539\u5173\u95ed\uff0c\u5bf9\u6269\u5c55\u5f00\u653e\" \u7684\u5f00\u95ed\u539f\u5219\u3002\u662f\u7cfb\u7edf\u53ef\u4ee5\u5411\u540e\u517c\u5bb9\u3002","title":"1.1.2 \u6761\u76ee\u7684\u4f18\u70b9"},{"location":"trias/datastore/#12","text":"\u6bd4\u7279\u5e01\uff0c\u8d85\u7ea7\u8d26\u672c\u4e2d\u90fd\u662f\u4ee5\u533a\u5757\u4e3a\u5355\u4f4d\uff0c\u591a\u4e2a\u533a\u5757\u4fdd\u5b58\u5230\u4e00\u4e2a\u533a\u5757\u6587\u4ef6\u4e2d\u3002EOS \u5728\u4e0e IPFS \u7684\u7ed3\u5408\u4e2d\uff0c\u628a\u4ea4\u6613\u4fdd\u5b58\u6210\u6587\u4ef6\uff0c\u533a\u5757\u4e2d\u4fdd\u5b58\u4e86\u5bf9\u4ea4\u6613\u7684\u5f15\u7528\u3002\u663e\u7136 EOS \u7684\u505a\u6cd5\uff0c\u66f4\u52a0\u7075\u6d3b\u3002\u56e0\u4e3a\u5404\u4ea4\u6613\u88ab\u6253\u5305\u5230\u4e00\u4e2a\u533a\u5757\u4e2d\uff0c\u53ea\u662f\u65f6\u95f4\u76f8\u8fd1\uff0c\u6240\u4ee5\u5728\u5b58\u50a8\u4e2d\u7269\u7406\u76f8\u90bb\uff0c\u5b83\u4eec\u591a\u6570\u60c5\u51b5\u4e0b\u5e76\u6ca1\u6709\u903b\u8f91\u4e0a\u7684\u5fc5\u7136\u8054\u7cfb\u3002\u6240\u4ee5\u6211\u4eec\u63d0\u51fa\u6587\u4ef6\u4ed3\u5e93\u7684\u6982\u5ff5\uff0c\u4e3b\u8981\u7528\u6765\u5b58\u50a8\u6761\u76ee(\u4e5f\u6709\u5176\u4ed6\u6587\u4ef6\uff0c\u5982\b\u72b6\u6001\u6587\u4ef6\u7b49)\uff0c\u4e00\u4e2a\u6761\u76ee\u4e00\u4e2a\u6587\u4ef6\uff0c\u533a\u5757\u4e2d\u53ea\u4fdd\u7559\u6587\u4ef6\u7684\u7d22\u5f15\uff0c\u7d22\u5f15\u6709\u53ef\u80fd\u662f IPFS \u7684 FileId\uff0c\u6216\u5176\u4ed6\u3002","title":"1.2 \u6587\u4ef6\u4ed3\u5e93"},{"location":"trias/datastore/#121-ipfs","text":"\u6587\u4ef6\u4ed3\u5e93\u662f\u4e00\u4e2a\u62bd\u8c61\uff0c\bIPFS \u53ea\u662f\u771f\u5b9e\u5b58\u50a8\u6587\u4ef6\u7684\u65b9\u5f0f\u4e4b\u4e00\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 IPFS\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7c7b\u4f3c\u7cfb\u7edf\uff0c\u751a\u81f3\u81ea\u5df1\u5b9e\u73b0\uff0c\u6216\u662f\u51e0\u79cd\u65b9\u5f0f\u7684\u7ed3\u5408\u3002\u5bf9\u4e8e\u60f3\u8981\u83b7\u53d6\u6761\u76ee\u5185\u5bb9\u7684\u8282\u70b9\u6765\u8bf4\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u5173\u5fc3\u5b9e\u73b0\u65b9\u5f0f\u3002\u540c\u65f6\uff0c\u4e3a\u4eca\u540e\u7cfb\u7edf\u7684\u6269\u5bb9\u5e26\u6765\u4e86\u66f4\u591a\u7684\u9009\u62e9\u3002","title":"1.2.1 \u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u7528 IPFS\uff0c\u8fd8\u8981\u63d0\u51fa\u6587\u4ef6\u4ed3\u5e93"},{"location":"trias/datastore/#122","text":"\u5982\u524d\u9762\u6240\u8bf4\uff0c\u591a\u4e2a\u6761\u76ee\u903b\u8f91\u4e0a\u5f88\u53ef\u80fd\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u5047\u8bbe\u4e00\u4e2a\u8282\u70b9\u60f3\u8981\u83b7\u53d6\u67d0\u4e2a\u6761\u76ee\u7684\u5185\u5bb9\uff0c\u800c\u9996\u5148\u83b7\u53d6\u4e86\u6574\u4e2a\u533a\u5757\uff0c\u7136\u540e\u518d\u8fdb\u884c\u89e3\u6790\uff0c\u52bf\u5fc5\u52a0\u5927\u4e86\u65e0\u6548\u7684\u6570\u636e\u4f20\u8f93\uff0c\u800c\u5f71\u54cd\u4e86\u7cfb\u7edf\u6027\u80fd\u3002","title":"1.2.2 \u4e3a\u4ec0\u4e48\u4e0d\u5b58\u50a8\u533a\u5757\u6587\u4ef6\uff0c\u800c\u662f\u5b58\u50a8\u6761\u76ee\u6587\u4ef6"},{"location":"trias/datastore/#1_1","text":"","title":"1. \u5b58\u50a8\u7ed3\u6784"},{"location":"trias/datastore/#11_1","text":"\b\u6587\u4ef6\u7cfb\u7edf\u7528\u6765\u5b58\u50a8\u533a\u5757\u6570\u636e\uff0c\u72b6\u6001\u6570\u636e\uff0c\u5386\u53f2\u6570\u636e\uff0c\b\u4ee5\u4e8c\u8fdb\u5236\u6570\u636e\u6587\u4ef6\u6216\u6587\u672c\u6587\u4ef6\u6765\u5b58\u50a8\u3002","title":"1.1 \u6587\u4ef6\u7cfb\u7edf"},{"location":"trias/datastore/#11_2","text":"\u4e0d\u53d7\u5e73\u53f0\u5f71\u54cd(\u64cd\u4f5c\u7cfb\u7edf) \u4e0d\u9700\u8981\u66f4\u591a\b\u4f9d\u8d56(\u76f8\u5bf9\u4e8e\u6570\u636e\u5e93\u6765\u8bf4) \u4fbf\u4e8e\u4e0e IPFS \u8fd9\u79cd\u53bb\u4e2d\u5fc3\u5316\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u5bf9\u63a5 \u9002\u5f53\u7684\b\u5bf9\u6587\u4ef6\u5927\u5c0f\u8fdb\u884c\u89c4\u5212\uff0c\u5bf9\u6587\u4ef6\u8fdb\u884c\u7ec4\u7ec7\uff0c\u4fbf\u4e8e\u4f20\u64ad","title":"1.1 \u6587\u4ef6\u5b58\u50a8\u7684\u4f18\u52bf"},{"location":"trias/datastore/#12_1","text":"","title":"1.2 \u57fa\u7840\u6570\u636e\u7ed3\u6784"},{"location":"trias/datastore/#121-block","text":"\u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 magicNumber uint32 \u503c \u5f85\u5b9a, \u4f5c\u4e3a\u533a\u5757\u4e4b\u95f4\u7684\u5206\u9694\u7b26 4 blockSize uint32 \u540e\u9762\u6570\u636e\u5230\u5757\u7ed3\u675f\u7684\u5b57\u8282\u6570 68 blockHeader []byte \u5757\u5934 (\u5927\u5c0f\u5f85\u5b9a) varint itemCount uint64 \u6761\u76ee\u6570\u91cf varies items []byte \u6761\u76ee\u96c6\u5408","title":"1.2.1 \bBlock"},{"location":"trias/datastore/#122-header","text":"\u5927\u5c0f(\u5b57\u8282) \u540d\u79f0 \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 4 version uint32 \u7248\u672c\u53f7 32 previous_block_hash [32]byte \u524d\u4e00\u4e2a block \u7684 \bhash \u503c 32 merkle_root_hash [32]byte \u533a\u5757\u5185\u6240\u6709 Item \u7684 merkle_hash \u503c Header \u4e2d\u7684\u5176\u4ed6\u9879\u5f85\u5b9a \b\u6bd4\u5982\u6bd4\u7279\u5e01\u4e2d\u7684 Hash \u96be\u5ea6\u503c\uff0c\u8ba1\u7b97\u7528\u7684\u968f\u673a\u6570 Nonce \u8ddf\u5171\u8bc6\u7b97\u6cd5\u76f8\u5173\uff0c\u8fd9\u91cc\u5f85\u5b9a","title":"1.2.2 Header"},{"location":"trias/datastore/#123","text":"\u6761\u76ee (Item) \u6761\u76ee \u662f\u4e00\u4e2a\u5bbd\u6cdb\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u662f\u7c7b\u4f3c\u6bd4\u7279\u5e01\u7684\u4ea4\u6613\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b\u4f3c\u4ee5\u592a\u574a\u7684\u4ea4\u6613\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e26\u6765\u4e24\u4e2a\u597d\u5904\uff1a \u4f7f\u5f97\u8d26\u53f7\u72b6\u6001\uff0cUTXO \u4e24\u79cd\u4e0d\u540c\u673a\u5236\u7684\u6570\u636e\u53ef\u4ee5\u5171\u5b58 \u5bf9\u5df2\u6709\u7ed3\u6784\u8fdb\u884c\u6539\u8fdb\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a itemType \u53ca\u5176\u89e3\u91ca\u65b9\u5f0f","title":"1.2.3 \u6761\u76ee"},{"location":"trias/datastore/#12_2","text":"\u7528\u6765\u5feb\u901f\u5b9a\u4f4d\u5b58\u50a8\u5185\u5bb9\u3002\u901a\u8fc7\u7d22\u5f15\u53ef\u4ee5\u5feb\u901f\u5b9a\u4f4d\u5230 Block\uff0cItem (\u5404\u79cd\u4ea4\u6613\u6216\u5176\u4ed6\u6570\u636e\u5f62\u5f0f)\uff0c\u4ee5\u53ca Item \u5f53\u4e2d\u5b50\u9879\u3002\u7d22\u5f15\u7cfb\u7edf\u4f7f\u7528 levelDB\u3002","title":"1.2 \u7d22\u5f15\u7cfb\u7edf"},{"location":"trias/datastore/#2","text":"","title":"2 \u8282\u70b9\u5206\u5de5"},{"location":"trias/datastore/#21","text":"\u4e0e IPFS \u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u5bf9\u63a5\uff0c\u5b58\u50a8 IPFS \u8fd4\u56de\u7684 FileId\uff0c\u5f62\u6210 FileId \b\u4e0e\u533a\u5757 Hash \u7684\u6620\u5c04\u5173\u5fc3 \u5b58\u653e\u6240\u6709\u533a\u5757\u7d22\u5f15\uff0c\u6761\u76ee\u7d22\u5f15\uff0c\u72b6\u6001\u7d22\u5f15 \u80fd\u63d0\u4f9b\u5168\u9762\u7684\u9a8c\u8bc1 \u4e0a\u4f20\u533a\u5757\u6587\u4ef6\u5230 IPFS \u7f13\u5b58\u8fd1\u671f\u533a\u5757 Note IPFS \u53ea\u8d1f\u8d23\u5b58\u50a8\u6587\u4ef6\uff0c\u5e76\u4e0d\u53c2\u4e0e\u4e1a\u52a1\u903b\u8f91\uff0c\u5982\u4f55\u89e3\u6790\u6587\u4ef6\u5185\u5bb9\uff0c\u8fd8\u9700\u8981\u5168\u8282\u70b9\u6765\u8d1f\u8d23\u3002 IPFS \u7684 FileId \u867d\u7136\u4e5f\u662f\u5185\u5bb9\u54c8\u5e0c\uff0c\u4f46\u4e0e\u533a\u5757\u54c8\u5e0c\u7684\u8ba1\u7b97\b\u89c4\u5219\u5e76\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u9700\u8981\u4fdd\u5b58\u6620\u5c04\u5173\u7cfb","title":"2.1 \u5168\u8282\u70b9"},{"location":"trias/datastore/#22","text":"\u5b58\u653e\u6240\u6709\u6761\u76ee\u54c8\u5e0c\uff0c\b\u5728\u63a5\u5230\u5ba2\u6237\u8282\u70b9\u4ea4\u6613\u8bf7\u6c42\u65f6\u53ef\u6839\u636e\u6761\u76ee\u54c8\u5e0c\u4ece\u5168\u8282\u70b9\u83b7\u53d6\u6761\u76ee\u6570\u636e\uff0c\u8fdb\u884c\u9a8c\u8bc1 \u6309\u7167\u5ba2\u6237\u8282\u70b9\u7684\u4ea4\u6613\u8bf7\u6c42\u5f62\u6210\u6761\u76ee \u90e8\u5206\u9a8c\u8bc1 \u6253\u5305\u533a\u5757\uff0c\u4e0a\u4f20\u7ed9\u5168\u8282\u70b9","title":"2.2 \u8f7b\u8282\u70b9"},{"location":"trias/datastore/#23","text":"\u4fdd\u5b58\u4e0e\u672c\u8282\u70b9\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u6700\u5927\u5316\b\u51cf\u5c11\u6570\u636e\u5b58\u50a8\u91cf\uff0c\u589e\u5f3a\u5ba2\u6237\u8282\u70b9\u7684\u53ef\u7528\u6027","title":"2.3 \b\u5ba2\u6237\u8282\u70b9"},{"location":"trias/datastore/#3","text":"","title":"3 \u540c\u6b65"},{"location":"trias/datastore/#31","text":"","title":"3.1 \u88ab\u52a8\u540c\u6b65"},{"location":"trias/datastore/#311","text":"","title":"3.1.1 \u88ab\u52a8\u540c\u6b65\u65f6\u673a"},{"location":"trias/datastore/#3111-newblockhashmsg","text":"\u5168\u8282\u70b9 sequenceDiagram participant L as Local FullNode participant P as Peer FullNode P ->> L: NewBlockHashMsg L ->> L: CheckHashExist L ->> P: GetBlockMsg P -->> L: BlockMsg L ->> L: SaveBlock Send NewBlockHashMsg \u8fc7\u7a0b\u63cf\u8ff0: Peer FullNode \u5728\u5b58\u5165\u65b0\u533a\u5757\uff0c\u6216\u83b7\u53d6\u65b0\u533a\u5757\u4e4b\u540e \u53d1\u51fa NewBlockHashMsg Local FullNode \u83b7\u53d6\u5230 NewBlockHashMsg\uff0c\u5728\u672c\u5730\u8fdb\u884c\u5bf9\u6bd4\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u53d1\u51fa GetBlockMsg \u7ed9 Peer FullNode Peer FullNode \u83b7\u53d6\u5230 GetBlockMsg \u540e\uff0c\u4ece\u672c\u5730\u67e5\u8be2\u5e76\u901a\u8fc7 BlockMsg \u5c06 Block \u4fe1\u606f\u53d1\u9001\u7ed9 Local FullNode Local FullNode \u5728\u62ff\u5230 Block \u4fe1\u606f\u4e4b\u540e\uff0c\u8ba1\u7b97 Block\uff0cItem \u7b49\u4fe1\u606f\u7684\u7d22\u5f15\uff0c\u5e76\u5c06 Block\uff0c\u76f8\u5173\u7d22\u5f15\u4fdd\u5b58 \u8f7b\u8282\u70b9 sequenceDiagram participant L as Local LightNode participant P as Peer FullNode P ->> L: NewBlockHashMsg L ->> L: CheckHashExist L ->> P: GetBlockHashMsg P -->> L: BlockHashMsg L ->> L: SaveHash SaveItemHash \u8fc7\u7a0b\u63cf\u8ff0: Peer FullNode \u5728\u5b58\u5165\u533a\u5757\uff0c\u6216\u83b7\u53d6\u65b0\u533a\u5757\u4e4b\u540e \u53d1\u51fa NewBlockHashMsg Local LightNode \u83b7\u53d6\u5230 NewBlockHashMsg\uff0c\u5728\u672c\u5730\u8fdb\u884c\u5bf9\u6bd4\uff0c\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u53d1\u51fa GetBlockHashMsg \u7ed9 Peer FullNode Peer FullNode \u901a\u8fc7 BlockHashMsg \u5c06 BlockHash, ItemHash \u7b49\u4fe1\u606f\u53d1\u9001\u7ed9 Local ClientNode Local ClientNode \u4fdd\u5b58 BlockHash, ItemHash \u7b49\u4fe1\u606f BlockHashMsg \bBlockHashMsg \u4f1a\u5305\u542b\u533a\u5757\u5f53\u4e2d\u7684 \u6761\u76ee \bHash","title":"3.1.1.1 \bNewBlockHashMsg"},{"location":"trias/datastore/#32","text":"","title":"3.2 \u4e3b\u52a8\u540c\u6b65"},{"location":"trias/datastore/#321","text":"","title":"3.2.1 \u4e3b\u52a8\u540c\u6b65\u65f6\u673a"},{"location":"trias/datastore/#3211","text":"\u5168\u8282\u70b9 sequenceDiagram participant L as Local FullNode participant P as Peer FullNode L ->> P: GetHeaderHashMsg P -->> L: HeaderHashMsg L ->> P: GetBlockMsg P -->> L: BlockMsg L ->> L: SaveBlock \u8fc7\u7a0b\u63cf\u8ff0: \u5f53\u4e00\u4e2a\u65b0\u7684\u5168\u8282\u70b9\u52a0\u5165\uff0c\u4f1a\u5faa\u73af\u5411\u5176\u4ed6 FullNode \u53d1\u51fa GetHeaderHashMsg \u8fdc\u7aef FullNode \u53d1\u9001 HeaderHashMsg \u7ed9\u672c\u8282\u70b9 \u672c\u8282\u70b9\u6839\u636e HeaderHash \u5411\u8fdc\u7aef\u8282\u70b9 \u53d1\u51fa GetBlockMsg \u8fdc\u7aef FullNode \u53d1\u9001 BlockMsg \u7ed9\u672c\u8282\u70b9 \b\u672c\u8282\u70b9\u8fdb\u884c\u6570\u636e\u4fdd\u5b58 \u8f7b\u8282\u70b9 sequenceDiagram participant L as Local LightNode participant P as Peer LightNode L ->> P: GetHeaderHashMsg P -->> L: HeaderHashMsg L ->> L: SaveHash \u8fc7\u7a0b\u63cf\u8ff0: \u5f53\u4e00\u4e2a\u65b0\u7684\u5168\u8282\u70b9\u52a0\u5165\uff0c\u4f1a\u5faa\u73af\u5411\u5176\u4ed6 FullNode \u53d1\u51fa GetHeaderHashMsg \u8fdc\u7aef FullNode \u53d1\u9001 HeaderHashMsg \u7ed9\u672c\u8282\u70b9 \b\u672c\u8282\u70b9\u8fdb\u884c\u6570\u636e\u4fdd\u5b58","title":"3.2.1.1 \u65b0\u8282\u70b9\u52a0\u5165"}]}